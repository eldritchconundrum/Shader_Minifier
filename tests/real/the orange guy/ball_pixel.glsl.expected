/* File generated with Shader Minifier 1.1.6
 * http://www.ctrl-alt-test.fr
 */
#ifndef BALL_PIXEL_GLSL_EXPECTED_
# define BALL_PIXEL_GLSL_EXPECTED_
# define VAR_COL "m"
# define VAR_INTENSITY "e"
# define VAR_LOCALTIME "a"
# define VAR_POS "d"
# define VAR_PROGRESSION "y"

const char *ball_pixel_glsl =
 "const int v=8;"
 "uniform vec4 m[v];"
 "uniform vec3 d[v];"
 "uniform float e[v],a,y;"
 "vec3 n(vec2 n)"
 "{"
   "float f=y,r=f*f,i=a;"
   "vec3 u=vec3(0.,0.,0.);"
   "float o=min(0.,1.5*y-.5),x=6.+3.*sin(i);"
   "for(int g=0;g<v;++g)"
     "{"
       "vec2 c=d[g].xy-n;"
       "float s=dot(c,c),t=atan(c.y,c.x),z=cos(5.*(t-(1.+float(g)*.05-f*1.5)*i)+s*x);"
       "z*=min(1.,abs(.7+f*.3-z)*15.);"
       "float l=max(0.,z*(1.-r)),C=l*e[g]*exp(-.02*s)+o;"
       "u+=m[g].xyz*C;"
     "}"
   "return u;"
 "}"
 "void main()"
 "{"
   "vec2 i=gl_TexCoord[0].xy*.7;"
   "vec3 f=n(i);"
   "gl_FragColor=vec4(f*1.1,1.);"
 "}";

#endif // BALL_PIXEL_GLSL_EXPECTED_
