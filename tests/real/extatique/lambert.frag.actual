/* File generated with Shader Minifier 1.1.6
 * http://www.ctrl-alt-test.fr
 */
#ifndef LAMBERT_FRAG_ACTUAL_
# define LAMBERT_FRAG_ACTUAL_
# define VAR_N "d"
# define VAR_AMBIENTCOLOR "n"
# define VAR_L1_POS "l"
# define VAR_L2_POS "r"
# define VAR_L3_POS "m"
# define VAR_LIGHT1COLOR "x"
# define VAR_LIGHT1DIFFUSE "a"
# define VAR_LIGHT1SPECULAR "g"
# define VAR_LIGHT2COLOR "f"
# define VAR_LIGHT2DIFFUSE "i"
# define VAR_LIGHT2SPECULAR "c"
# define VAR_LIGHT3COLOR "e"
# define VAR_LIGHT3DIFFUSE "u"
# define VAR_LIGHT3SPECULAR "o"
# define VAR_NOISE "h"
# define VAR_POS "v"
# define VAR_THRESHOLDZ "y"
# define VAR_WPOS "t"

const char *lambert_frag =
 "varying vec3 d,v,t,l,r,m;"
 "uniform vec3 x,f,e,n;"
 "uniform float g,c,o,a,i,u,y;"
 "const float s=.2,p=.1,z=1.,D=10.;"
 "uniform sampler2D h;"
 "float w(vec3 d)"
 "{"
   "return 1./(1.+.012*dot(d,d));"
 "}"
 "vec3 w(vec3 d,float v)"
 "{"
   "return mix(d,vec3(dot(vec3(.3),d)),v);"
 "}"
 "void main()"
 "{"
   "vec2 a=gl_TexCoord[0].xy;"
   "vec3 u=vec3(texture2D(h,a+vec2(.13,.46)).x,texture2D(h,a).x,texture2D(h,a+vec2(-.33,.14)).x);"
   "u=(u-vec3(.5))*5.;"
   "vec3 i=normalize(d+u);"
   "if(i.z<y)"
     "discard;"
   "vec3 C=l-v,F=r-v,T=m-v;"
   "float b=length(C),j=length(F),k=length(T);"
   "vec3 q=C/b,A=F/j,B=T/k,E=normalize(-v),G=reflect(q,d),H=reflect(A,d),I=reflect(B,d);"
   "float J=max(0.,dot(i,q)),K=max(0.,dot(i,A)),L=max(0.,dot(i,B)),M=g*pow(max(0.,dot(E,G)),10.),N=c*pow(max(0.,dot(E,H)),10.),O=o*pow(max(0.,dot(E,I)),10.),P=(J+M)/(1.+b*(s+p*b)),Q=(K+N)/(1.+j*(s+p*j)),R=(L+O)/(1.+k*(s+p*k));"
   "vec3 S=n+x*vec3(P)+f*vec3(Q)+e*vec3(R);"
   "float U=clamp((v.z-z)/(D-z),0.,1.);"
   "vec3 V=w(S*vec3(w(t)),U);"
   "gl_FragColor=gl_Color*vec4(V,1.);"
 "}";

#endif // LAMBERT_FRAG_ACTUAL_
