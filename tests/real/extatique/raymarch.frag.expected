/* File generated with Shader Minifier 1.1.6
 * http://www.ctrl-alt-test.fr
 */
#ifndef RAYMARCH_FRAG_EXPECTED_
# define RAYMARCH_FRAG_EXPECTED_
# define VAR_DIR "v"

const char *raymarch_frag =
 "varying vec3 v;"
 "float e(vec3 v,float y)"
 "{"
   "return abs(y-v.y);"
 "}"
 "float t(vec3 v,vec4 y)"
 "{"
   "return length(y.xyz-v)-y.w;"
 "}"
 "float e(vec3 v,vec3 n,float y,float m)"
 "{"
   "v-=n;"
   "float r=sqrt(v.x*v.x+v.z*v.z)-y,f=sqrt(r*r+v.y*v.y)-m;"
   "return mix(f,f,.9);"
 "}"
 "float e(vec3 v)"
 "{"
   "float r=e(v,vec3(0,0,15),2.,.5);"
   "return r;"
 "}"
 "vec3 t(vec3 v)"
 "{"
   "float y=.01;"
   "return normalize(vec3(e(v+vec3(y,0,0))-e(v-vec3(y,0,0)),e(v+vec3(0,y,0))-e(v-vec3(0,y,0)),e(v+vec3(0,0,y))-e(v-vec3(0,0,y))));"
 "}"
 "void main()"
 "{"
   "float y,f=0.;"
   "vec3 r=vec3(0),n=normalize(v);"
   "for(int m=0;m<64;m++)"
     "f=e(r),r=r+f*n;"
   "if(f>1.)"
     "{"
       "gl_FragColor=vec4(1.,0.,0.,1.);"
       "return;"
     "}"
   "vec3 m=t(r);"
   "gl_FragColor=vec4(m,1.);"
 "}";

#endif // RAYMARCH_FRAG_EXPECTED_
