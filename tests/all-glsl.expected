/* File generated with Shader Minifier 1.1.6
 * http://www.ctrl-alt-test.fr
 */
#ifndef SHADER_CODE_H_
# define SHADER_CODE_H_

const char *chocolux_frag =
 "uniform vec2 resolution;"
 "uniform float time;"
 "float v(vec3 v)"
 "{"
   "float e=distance(v,vec3(cos(time)+sin(time*.2),.3,2.+cos(time*.5)*.5));"
   "e*=distance(v,vec3(-cos(time*.7),.3,2.+sin(time*.5)));"
   "e*=distance(v,vec3(-sin(time*.2)*.5,sin(time),2.));"
   "e*=cos(v.y)*cos(v.x)-.1-cos(v.z*7.+time*7.)*cos(v.x*3.)*cos(v.y*4.)*.1;"
   "return e;"
 "}"
 "void main()"
 "{"
   "vec2 t=-1.+2.*gl_FragCoord.xy/resolution.xy;"
   "vec3 e=vec3(t.x,t.y*1.25-.3,0.),s=vec3(t.x+cos(time)*.3,t.y,1.)/64.;"
   "vec4 f=vec4(0.);"
   "float y=0.;"
   "for(int r=0;r<75;r++)"
     "{"
       "if(v(e+s*y)<.4)"
         "{"
           "y-=5.;"
           "for(int x=0;x<5;x++)"
             "{"
               "if(v(e+s*y)<.4)"
                 "break;"
               "y+=1.;"
             "}"
           "vec3 x=vec3(.01,0.,0.),d=vec3(0.);"
           "d.x=v(e+s*y)-v(vec3(e+s*y+x.xyy));"
           "d.y=v(e+s*y)-v(vec3(e+s*y+x.yxy));"
           "d.z=v(e+s*y)-v(vec3(e+s*y+x.yyx));"
           "d=normalize(d);"
           "f+=max(dot(vec3(0.,0.,-.5),d),0.)+max(dot(vec3(0.,-.5,.5),d),0.)*.5;"
           "break;"
         "}"
       "y+=5.;"
     "}"
   "gl_FragColor=f+vec4(.1,.2,.5,1.)*(y*.025);"
 "}";

const char *clod_frag =
 "uniform vec2 resolution;"
 "uniform float time;"
 "uniform sampler2D tex0,tex1,tex2,tex3;"
 "float v(vec3 v)"
 "{"
   "float e=(sin(v.x)+v.y*.25)*.35;"
   "v=vec3(cos(e)*v.x-sin(e)*v.y,sin(e)*v.x+cos(e)*v.y,v.z);"
   "return dot(cos(v)*cos(v),vec3(1))-1.2;"
 "}"
 "vec3 v(vec3 e,vec3 s)"
 "{"
   "float y=0.,t,x;"
   "for(int f=0;f<75;f++)"
     "{"
       "if(v(e+s*y)<0.)"
         "{"
           "t=y-.125;"
           "x=y;"
           "for(int r=0;r<10;r++)"
             "{"
               "y=(t+x)*.5;"
               "if(v(e+s*y)<0.)"
                 "x=y;"
               "else"
                 " t=y;"
             "}"
           "vec3 d=vec3(.1,0.,0.),r=e+s*y,c=-normalize(vec3(v(r+d),v(r+d.yxy),v(r+d.yyx))+vec3(sin(r*75.))*.01);"
           "return vec3(mix((max(-dot(c,vec3(.577)),0.)+.125*max(-dot(c,vec3(-.707,-.707,0)),0.))*(mod(length(r.xy)*20.,2.)<1.?vec3(.71,.85,.25):vec3(.79,.93,.4)),vec3(.93,.94,.85),vec3(pow(y/9.,5.))));"
         "}"
       "y+=.125;"
     "}"
   "return vec3(.93,.94,.85);"
 "}"
 "void main()"
 "{"
   "vec2 t=-1.+2.*gl_FragCoord.xy/resolution.xy;"
   "gl_FragColor=vec4(v(vec3(sin(time*1.5)*.5,cos(time)*.5,time),normalize(vec3(t.xy,1.))),1.);"
 "}";

const char *deform_frag =
 "uniform float time;"
 "uniform vec2 resolution;"
 "uniform vec4 mouse;"
 "uniform sampler2D tex0,tex1,tex2,tex3;"
 "void main()"
 "{"
   "vec2 v=-1.+2.*gl_FragCoord.xy/resolution.xy,y=-1.+2.*mouse.xy/resolution.xy;"
   "float t=atan(v.y-y.y,v.x-y.x),e=sqrt(dot(v-y,v-y)),x=atan(v.y+y.y,v.x+y.x),s=sqrt(dot(v+y,v+y));"
   "vec2 d;"
   "d.x=.2*time+(e-s)*.25;"
   "d.y=sin(2.*(t-x));"
   "float r=e*s*.8;"
   "vec3 m=texture2D(tex0,d).xyz;"
   "gl_FragColor=vec4(m/(.1+r),1.);"
 "}";

const char *disco_frag =
 "uniform vec2 resolution;"
 "uniform float time;"
 "uniform sampler2D tex0,tex1,tex2,tex3;"
 "vec4 v(vec2 v,float y)"
 "{"
   "float s=3.1415,e=time*sign(y),t=v.x*320.*.0065*y,d=v.y*240.*.006*y,r=sqrt(t*t+d*d);"
   "if(r>1.)"
     "return vec4(0.);"
   "else"
     "{"
       "float f=-.4*sign(y)+sin(e*.05),x=sqrt(1.-t*t-d*d),c=d*sin(f)-x*cos(f);"
       "d=d*cos(f)+x*sin(f);"
       "x=acos(d);"
       "f=acos(t/sin(x))/(2.*s)*120.*sign(c)-e;"
       "x=x*60./s;"
       "c=cos(floor(x/s));"
       "r=pow(abs(cos(f)*sin(x)),.2)*.1/(c+sin(float(int((f+s/2.)/s))+e*.6+cos(c*25.)))*pow(1.-r,.9);"
       "vec4 m;"
       "if(r<0.)"
         "m=vec4(-r/2.*abs(cos(e*.1)),0.,-r*2.*abs(sin(e*.04)),1.);"
       "else"
         " m=vec4(r,r*2.,r*2.,1.);"
       "return m;"
     "}"
 "}"
 "void main()"
 "{"
   "vec2 t=-1.+2.*gl_FragCoord.xy/resolution.xy;"
   "vec4 e=vec4(0.);"
   "for(int f=80;f>0;f--)"
     "e+=v(t,1.-float(f)/80.)*(.008-float(f)*5e-05);"
   "vec4 y=v(t,1.);"
   "gl_FragColor=(y.w==0.?v(t,-.2)*.02:y)+sqrt(e);"
 "}";

const char *blit2_frag =
 "uniform sampler2D tex1,tex2;"
 "uniform float tex1Amount,tex2Amount;"
 "void main()"
 "{"
   "vec2 t=gl_TexCoord[0].xy;"
   "gl_FragColor=vec4(tex1Amount)*texture2D(tex1,t)+vec4(tex2Amount)*texture2D(tex2,t);"
 "}";

const char *blitcorner_frag =
 "uniform sampler2D tex;"
 "uniform float ratio,factor;"
 "void main()"
 "{"
   "vec2 t=gl_TexCoord[0].xy,v=(t-vec2(.5,.5))*vec2(1.,ratio);"
   "vec4 s=vec4(max(0.,1.-factor*dot(v,v)));"
   "gl_FragColor=gl_Color*s*texture2D(tex,t);"
 "}";

const char *blit_frag =
 "uniform sampler2D tex;"
 "void main()"
 "{"
   "vec2 t=gl_TexCoord[0].xy;"
   "gl_FragColor=gl_Color*texture2D(tex,t);"
 "}";

const char *blitgirl_frag =
 "uniform sampler2D tex,noise;"
 "uniform vec2 size;"
 "uniform float border;"
 "void main()"
 "{"
   "vec2 v=gl_TexCoord[0].xy,t=v*size;"
   "float s=smoothstep(0.,border,t.x)-smoothstep(size.x-border,size.x,t.x),y=smoothstep(0.,border,t.y)-smoothstep(size.y-border,size.y,t.y),r=border*3.,e=smoothstep(0.,r,t.x)-smoothstep(size.x-r,size.x,t.x),x=smoothstep(0.,r,t.y)-smoothstep(size.y-r,size.y,t.y),d=texture2D(d,t).x,f=max(0.,s*y-d*(1.-e*x));"
   "gl_FragColor=vec4(gl_Color.xyz,f)*texture2D(tex,v);"
 "}";

const char *blitsquare_frag =
 "uniform sampler2D tex;"
 "uniform vec2 size;"
 "uniform float border;"
 "void main()"
 "{"
   "vec2 t=gl_TexCoord[0].xy,v=t*size;"
   "float s=smoothstep(0.,border,v.x)-smoothstep(size.x-border,size.x,v.x),y=smoothstep(0.,border,v.y)-smoothstep(size.y-border,size.y,v.y),x=s*y;"
   "gl_FragColor=vec4(gl_Color.xyz,x)*texture2D(tex,t);"
 "}";

const char *distort_frag =
 "uniform sampler2D tex;"
 "uniform float amount,colorSep;"
 "uniform vec4 glow;"
 "void main()"
 "{"
   "vec2 v=gl_TexCoord[0].xy-vec2(.5,.5),t=v+vec2(colorSep,0.),y=v-vec2(colorSep,0.);"
   "float e=amount/(1.+length(v*5.)),x=cos(e),r=sin(e);"
   "mat2 s=mat2(x,-r,r,x);"
   "vec4 f=vec4(1.,.5,0.,.5)*texture2D(tex,vec2(.5)+s*t),d=vec4(0.,.5,1.,.5)*texture2D(tex,vec2(.5)+s*y);"
   "gl_FragColor=gl_Color*(f+d)+glow;"
 "}";

const char *final_frag =
 "uniform sampler2D tex;"
 "uniform sampler3D gammaRamp;"
 "uniform float blurType,blurAmount,invHeight,invWidth;"
 "void main()"
 "{"
   "vec2 t=gl_TexCoord[0].xy;"
   "vec4 y=(texture2DLod(tex,t,7.)+texture2DLod(tex,t,6.)+texture2DLod(tex,t,5.)+texture2DLod(tex,t,4.)+texture2DLod(tex,t,3.)+texture2DLod(tex,t,2.)+texture2DLod(tex,t,1.))*vec4(.142857),v=texture2D(tex,t),r=vec4(1.)-(vec4(1.)-y)*(vec4(1.)-v),x=r*mix(r,vec4(1.),blurType),d=mix(v,x,blurAmount);"
   "gl_FragColor=texture3D(gammaRamp,d.xyz);"
 "}";

const char *font_frag =
 "uniform sampler2D tex,fill;"
 "void main()"
 "{"
   "vec2 t=gl_TexCoord[0].xy;"
   "vec4 v=texture2D(tex,t),s=texture2D(fill,t*3.);"
   "gl_FragColor=v*s*gl_Color;"
 "}";

const char *glow_frag =
 "uniform sampler1D tex;"
 "void main()"
 "{"
   "vec2 t=gl_TexCoord[0].xy;"
   "float v=length(t)/2.04;"
   "gl_FragColor=gl_Color*vec4(1.,1.,1.,texture1D(tex,v));"
 "}";

const char *graindo12_frag =
 "uniform float time,param1;"
 "uniform sampler1D distRamp;"
 "uniform vec3 matColor,ambientColor;"
 "float v(float t)"
 "{"
   "return texture1D(distRamp,abs(t)*.125).x;"
 "}"
 "float s(float t)"
 "{"
   "return pow(.5,abs(t));"
 "}"
 "mat3 s(float t,float v,float e)"
 "{"
   "float s=sin(t),r=sin(v),x=sin(e),d=cos(t),y=cos(v),f=cos(e),c=y*f,b=d*r*f+s*x,p=d*x-s*r*f,z=d*f+s*r*x,a=s*f-d*r*x,m=-y*x,i=d*y,n=-s*y,o=-r;"
   "return mat3(c,p,b,m,z,a,o,n,i);"
 "}"
 "vec3 v(vec3 t,vec3 r,float e)"
 "{"
   "vec3 f=vec3(8.,2.,2.);"
   "float m=cos(e*3.),y=cos(e*.2)*.02+.5;"
   "vec3 x=vec3(0.);"
   "mat3 d=s(r.z,r.x,-r.y);"
   "vec3 c=r*d;"
   "float i=length(c),b=v(i-12.*y)*v(8.485-12.*y)*v(i-8.485);"
   "vec3 p=t*vec3(1.-b);"
   "f.x=c.x+3.;"
   "float g=param1,a=v(g*(i-6.*y))*v(g*(i-length(f)));"
   "vec3 z=matColor;"
   "return mix(p,z,a*param1);"
 "}"
 "void main()"
 "{"
   "float t=time;"
   "vec2 r=gl_TexCoord[0].xy;"
   "vec3 f=vec3(0.);"
   "const int e=3;"
   "mat3 m=s(t,t,-t);"
   "vec3 x=m*vec3(r,float(e)),y=m*vec3(r*vec2(2.),-float(e));"
   "for(int d=0;d<=e;++d)"
     "{"
       "float b=float(d)/float(e);"
       "vec3 c=mix(x,y,b);"
       "f=v(f,c,t);"
     "}"
   "gl_FragColor=vec4(f,1.);"
 "}";

const char *lambert2_frag =
 "varying vec3 N,pos,l1_pos,l2_pos,l3_pos;"
 "uniform vec3 light1Color,light2Color,light3Color,ambientColor;"
 "uniform float light1Specular,light2Specular,light3Specular,light1Diffuse,light2Diffuse,light3Diffuse;"
 "const float t=.3,s=.2,v=1.,r=5.;"
 "uniform sampler2D noise,tex;"
 "vec3 n(vec3 t,float v)"
 "{"
   "return mix(t,vec3(dot(vec3(.3),t)),v);"
 "}"
 "void main()"
 "{"
   "vec2 y=gl_TexCoord[0].xy;"
   "vec3 f=vec3(texture2D(noise,y+vec2(.13,.46)).x,texture2D(noise,y).x,texture2D(noise,y+vec2(-.33,.14)).x);"
   "vec4 m=texture2D(tex,y);"
   "f=(f-vec3(.5))*10.;"
   "vec3 x=normalize(N+f),e=l1_pos-pos,d=l2_pos-pos,c=l3_pos-pos;"
   "float p=length(e),b=length(d),l=length(c);"
   "vec3 i=e/p,z=d/b,a=c/l,g=normalize(-pos),o=reflect(i,N),w=reflect(z,N),h=reflect(a,N);"
   "float u=max(0.,dot(x,i)),C=max(0.,dot(x,z)),D=max(0.,dot(x,a)),S=light1Specular*pow(max(0.,dot(g,o)),10.),F=light2Specular*pow(max(0.,dot(g,w)),10.),T=light3Specular*pow(max(0.,dot(g,h)),10.),j=(u+S)/(1.+p*(t+s*p)),k=(C+F)/(1.+b*(t+s*b)),q=(D+T)/(1.+l*(t+s*l));"
   "vec3 A=ambientColor+light1Color*vec3(j)+light2Color*vec3(k)+light3Color*vec3(q);"
   "float B=clamp((pos.z-v)/(r-v),0.,1.);"
   "vec3 E=n(A,B);"
   "gl_FragColor=m*gl_Color*vec4(E,1.);"
 "}";

const char *lambert_frag =
 "varying vec3 N,pos,wpos,l1_pos,l2_pos,l3_pos;"
 "uniform vec3 light1Color,light2Color,light3Color,ambientColor;"
 "uniform float light1Specular,light2Specular,light3Specular,light1Diffuse,light2Diffuse,light3Diffuse,thresholdZ;"
 "const float t=.2,r=.1,v=1.,f=10.;"
 "uniform sampler2D noise;"
 "float s(vec3 t)"
 "{"
   "return 1./(1.+.012*dot(t,t));"
 "}"
 "vec3 s(vec3 t,float v)"
 "{"
   "return mix(t,vec3(dot(vec3(.3),t)),v);"
 "}"
 "void main()"
 "{"
   "vec2 y=gl_TexCoord[0].xy;"
   "vec3 e=vec3(texture2D(noise,y+vec2(.13,.46)).x,texture2D(noise,y).x,texture2D(noise,y+vec2(-.33,.14)).x);"
   "e=(e-vec3(.5))*5.;"
   "vec3 x=normalize(N+e);"
   "if(x.z<thresholdZ)"
     "discard;"
   "vec3 m=l1_pos-pos,d=l2_pos-pos,c=l3_pos-pos;"
   "float p=length(m),l=length(d),b=length(c);"
   "vec3 i=m/p,a=d/l,z=c/b,g=normalize(-pos),o=reflect(i,N),w=reflect(a,N),n=reflect(z,N);"
   "float u=max(0.,dot(x,i)),C=max(0.,dot(x,a)),D=max(0.,dot(x,z)),h=light1Specular*pow(max(0.,dot(g,o)),10.),S=light2Specular*pow(max(0.,dot(g,w)),10.),F=light3Specular*pow(max(0.,dot(g,n)),10.),j=(u+h)/(1.+p*(t+r*p)),k=(C+S)/(1.+l*(t+r*l)),q=(D+F)/(1.+b*(t+r*b));"
   "vec3 A=ambientColor+light1Color*vec3(j)+light2Color*vec3(k)+light3Color*vec3(q);"
   "float B=clamp((pos.z-v)/(f-v),0.,1.);"
   "vec3 E=s(A*vec3(s(wpos)),B);"
   "gl_FragColor=gl_Color*vec4(E,1.);"
 "}";

const char *loading_frag =
 "uniform sampler2D tex;"
 "uniform sampler3D gammaRamp;"
 "uniform float blurType,blurAmount;"
 "void main()"
 "{"
   "vec2 t=gl_TexCoord[0].xy;"
   "vec4 v=(texture2DLod(tex,t,7.)+texture2DLod(tex,t,6.)+texture2DLod(tex,t,5.)+texture2DLod(tex,t,4.)+texture2DLod(tex,t,3.)+texture2DLod(tex,t,2.)+texture2DLod(tex,t,1.))*vec4(.142857),x=texture2D(tex,t),r=vec4(1.)-(vec4(1.)-v)*(vec4(1.)-x),y=r*mix(r,vec4(1.),blurType),d=mix(x,y,blurAmount);"
   "gl_FragColor=texture3D(gammaRamp,d.xyz);"
 "}";

const char *log_frag =
 "uniform sampler2D tex;"
 "uniform float invGamma;"
 "const vec3 t=vec3(.11,.6,.29);"
 "void main()"
 "{"
   "vec2 v=gl_TexCoord[0].xy;"
   "vec3 r=texture2D(tex,v).xyz;"
   "r=log2(r+vec3(1.));"
   "float x=dot(t,r);"
   "vec3 e=r*vec3(pow(x,invGamma));"
   "gl_FragColor=gl_Color*vec4(e,1.);"
 "}";

const char *particle_frag =
 "uniform sampler2D tex;"
 "uniform float intensity;"
 "void main()"
 "{"
   "vec2 t=gl_TexCoord[0].xy;"
   "gl_FragColor=vec4(vec3(intensity),1.)*gl_Color*texture2D(tex,t);"
 "}";

const char *progress_frag =
 "uniform sampler2D tex;"
 "uniform float progression;"
 "vec3 t(vec3 t,float v)"
 "{"
   "return mix(t,vec3(dot(vec3(.33),t)),v);"
 "}"
 "void main()"
 "{"
   "float s=1.57075,v=13.,r=gl_TexCoord[0].y,y=gl_TexCoord[0].x+.15*sin(r*2.*3.1415),d=smoothstep(0.,.1,r)-smoothstep(.9,1.,r),x=.5+.5*sin(v*r),f=abs(x-y),l=sqrt(max(0.,2.5-(9.-3.*abs(cos(v*r)))*f)),e=l*max(0.,-cos(v*r)),c=.5+.5*sin(v*r+s),b=abs(c-y),g=sqrt(max(0.,2.5-(9.-3.*abs(cos(v*r+s)))*b)),a=g*max(0.,-cos(v*r+s)),i=.5+.5*sin(v*r+s*2.),p=abs(i-y),m=sqrt(max(0.,2.5-(9.-3.*abs(cos(v*r+s*2.)))*p)),z=m*max(0.,-cos(v*r+s*2.)),n=.5+.5*sin(v*r+s*3.),o=abs(n-y),w=sqrt(max(0.,2.5-(9.-3.*abs(cos(v*r+s*3.)))*o)),N=w*max(0.,-cos(v*r+s*3.));"
   "const float B=.3;"
   "float u=(gl_TexCoord[0].x+.51)/2.,h=(gl_TexCoord[0].x+.44)/2.,C=(gl_TexCoord[0].x+.55)/2.,q=(gl_TexCoord[0].x+.48)/2.;"
   "vec3 D=u<progression?t(vec3(1.,.59,1.),B):vec3(.3,.3,.3),F=h<progression?t(vec3(.6,.18,.19),B):vec3(.4,.4,.4),j=C<progression?t(vec3(.97,.62,.462745),B):vec3(.6,.6,.6),k=q<progression?t(vec3(.996078,.309804,.541176),B):vec3(.5,.5,.5);"
   "vec4 A=vec4(e*D+a*F+z*j+N*k,d*(e+a+z+N));"
   "vec2 E=gl_TexCoord[0].xy;"
   "gl_FragColor=gl_Color*A*mix(texture2D(tex,E*vec2(1.5,4.5)),vec4(1.,1.,1.,1.),.5);"
 "}";

const char *put_frag =
 "void main()"
 "{"
   "gl_FragColor=gl_Color;"
 "}";

const char *raymarch_frag =
 "varying vec3 dir;"
 "float t(vec3 t,float v)"
 "{"
   "return abs(v-t.y);"
 "}"
 "float s(vec3 t,vec4 v)"
 "{"
   "return length(v.xyz-t)-v.w;"
 "}"
 "float s(vec3 t,vec3 v,float x,float y)"
 "{"
   "t-=v;"
   "float r=sqrt(t.x*t.x+t.z*t.z)-x,e=sqrt(r*r+t.y*t.y)-y;"
   "return mix(e,e,.9);"
 "}"
 "float s(vec3 t)"
 "{"
   "float r=s(t,vec3(0,0,15),2.,.5);"
   "return r;"
 "}"
 "vec3 t(vec3 t)"
 "{"
   "float v=.01;"
   "return normalize(vec3(s(t+vec3(v,0,0))-s(t-vec3(v,0,0)),s(t+vec3(0,v,0))-s(t-vec3(0,v,0)),s(t+vec3(0,0,v))-s(t-vec3(0,0,v))));"
 "}"
 "void main()"
 "{"
   "float x,v=0.;"
   "vec3 r=vec3(0),y=normalize(dir);"
   "for(int f=0;f<64;f++)"
     "v=s(r),r=r+v*y;"
   "if(v>1.)"
     "{"
       "gl_FragColor=vec4(1.,0.,0.,1.);"
       "return;"
     "}"
   "vec3 e=t(r);"
   "gl_FragColor=vec4(e,1.);"
 "}";

const char *scene30_frag =
 "uniform sampler2D tex;"
 "uniform float angle,time;"
 "varying vec3 pos,N;"
 "vec4 t(vec3 t)"
 "{"
   "float v=atan(t.x,t.y+.01),r=-pos.z;"
   "vec4 f=vec4(0.);"
   "for(int s=0;s<8;++s)"
     "{"
       "float y=float(s),x=r*2./(1.+y)+time*.01*(2.+y),d=angle+2.5*v/3.14159;"
       "f+=texture2D(tex,vec2(x,d))/(1.+.3*y);"
     "}"
   "return f;"
 "}"
 "vec3 t(vec3 t,vec3 v)"
 "{"
   "float r=.8*max(0.,dot(v,vec3(1.,.2,0.))),y=.2*max(0.,dot(v,vec3(-1.,-.1,0.)));"
   "vec3 s=vec3(r)*vec3(.8,.7,.6)+vec3(y)*vec3(.6,.7,.8);"
   "return s;"
 "}"
 "void main()"
 "{"
   "vec3 v=normalize(N),r=reflect(-pos,normalize(v)),x=t(r).xyz*mix(vec3(1.),gl_Color.xyz,.4),e=t(pos).xyz*gl_Color.xyz;"
   "gl_FragColor=vec4(e+x,1.);"
 "}";

const char *scene40_frag =
 "uniform sampler2D tex;"
 "varying vec3 wpos,N;"
 "uniform vec3 eyePos;"
 "uniform float radius,medium;"
 "uniform vec3 center,light1,light2,light3,light4;"
 "vec3 t(vec3 v,vec2 t)"
 "{"
   "vec3 r=texture2D(tex,t*.05).xyz,x=v*.1-vec3(-.5,-.5,-.5),y=v*.1-vec3(.5,.5,-.5),e=v*.1-vec3(-.5,.5,.5),d=v*.1-vec3(.5,-.5,.5),s=light1*vec3(max(0.,1.25-dot(x,x))),f=light2*vec3(max(0.,1.25-dot(y,y))),l=light3*vec3(max(0.,1.25-dot(e,e))),b=light4*vec3(max(0.,1.25-dot(d,d)));"
   "return r+s+f+l+b;"
 "}"
 "float t(float t)"
 "{"
   "float s=max(-1.15365,t);"
   "return 1.+s*(1.+s*(.5+s*.333333));"
 "}"
 "vec3 v(vec3 v,vec3 x)"
 "{"
   "vec3 r=vec3(0.),s=v,y=x,f=vec3(.5),e,d=vec3(0.),m,u;"
   "vec2 l;"
   "vec3 g,a;"
   "for(int c=0;c<1;++c)"
     "{"
       "m=40.*y;"
       "u=vec3(0.);"
       "l=vec2(0.);"
       "e=s+m;"
       "if(abs(e.x)>10.)"
         "{"
           "if(e.x>10.)"
             "m*=(9.99-s.x)/m.x,u=vec3(-1.,0.,0.),e=m+s,l=e.yz,d=t(e,l);"
           "else"
             " m*=(-9.99-s.x)/m.x,u=vec3(1.,0.,0.),e=m+s,l=e.yz*vec2(-1.,1.),d=t(e,l);"
         "}"
       "if(abs(e.y)>10.)"
         "{"
           "if(e.y>10.)"
             "m*=(9.99-s.y)/m.y,u=vec3(0.,-1.,0.),e=m+s,l=e.xz*vec2(-1.,1.),d=t(e,l);"
           "else"
             " m*=(-9.99-s.y)/m.y,u=vec3(0.,1.,0.),e=m+s,l=e.xz,d=t(e,l);"
         "}"
       "if(abs(e.z)>10.)"
         "{"
           "if(e.z>10.)"
             "m*=(9.99-s.z)/m.z,u=vec3(0.,0.,-1.),e=m+s,l=e.xy*vec2(-1.,1.),d=t(e,l);"
           "else"
             " m*=(-9.99-s.z)/m.z,u=vec3(0.,0.,1.),e=m+s,l=e.xy,d=t(e,l);"
         "}"
       "a=d*vec3(t(-length(m)*.04));"
       "r+=a*f;"
       "f*=a;"
       "g=reflect(y,u);"
       "s=e;"
       "y=g;"
     "}"
   "return r;"
 "}"
 "void t(vec3 v,vec3 t,float s,float x,out vec3 r,out vec3 f,out float e)"
 "{"
   "float y=s/x,d=dot(-v,t);"
   "e=sqrt(1.-y*y*(1.-d*d));"
   "r=v+t*(2.*d);"
   "f=v*y+t*(e+y*d);"
 "}"
 "void main()"
 "{"
   "vec3 r=normalize(N),x=normalize(wpos-eyePos),y,s;"
   "float e,d;"
   "t(x,r,1.,medium+.1,y,s,e);"
   "float f=2.*e*radius;"
   "vec3 m=wpos+s*vec3(f),l=-(m-center)/radius,z,b;"
   "t(s,l,medium+.3,1.,z,b,d);"
   "float c=2.*t(-dot(f,f)*.2);"
   "vec3 p=v(m,b)*vec3(c),i=v(wpos,y)*gl_Color.xyz;"
   "gl_FragColor=gl_Color*vec4(i+p,1.);"
 "}";

const char *scene45_frag =
 "uniform sampler2D tex;"
 "uniform float time;"
 "void main()"
 "{"
   "vec2 t=gl_TexCoord[0].xy;"
   "float v=atan(t.y,t.x+.0001)/3.14159,r=.002/(.01+length(t))-time*.1;"
   "vec4 y=texture2D(tex,vec2(v,r))+vec4(.5)*texture2D(tex,vec2(v,r*4.))+vec4(.25)*texture2D(tex,vec2(v,r*16.));"
   "gl_FragColor=gl_Color*y;"
 "}";

const char *skybox2_frag =
 "varying vec3 wpos;"
 "uniform vec3 eyePos;"
 "uniform sampler2D tex;"
 "uniform vec3 light1,light2,light3,light4;"
 "vec3 t(vec3 v,vec2 t)"
 "{"
   "vec3 r=texture2D(tex,t*.05).xyz,x=v*.1-vec3(-.5,-.5,-.5),e=v*.1-vec3(.5,.5,-.5),y=v*.1-vec3(-.5,.5,.5),d=v*.1-vec3(.5,-.5,.5),s=light1*vec3(max(0.,1.25-dot(x,x))),l=light2*vec3(max(0.,1.25-dot(e,e))),f=light3*vec3(max(0.,1.25-dot(y,y))),b=light4*vec3(max(0.,1.25-dot(d,d)));"
   "return r+s+l+f+b;"
 "}"
 "float t(float t)"
 "{"
   "float s=max(-1.15365,t);"
   "return 1.+s*(1.+s*(.5+s*.333333));"
 "}"
 "vec3 v(vec3 v,vec3 x)"
 "{"
   "vec3 r=vec3(0.),s=v,e=x,y=vec3(.5),f,d=vec3(0.),m,l;"
   "vec2 u;"
   "vec3 g,a;"
   "for(int c=0;c<3;++c)"
     "{"
       "m=50.*e;"
       "l=vec3(0.);"
       "u=vec2(0.);"
       "f=s+m;"
       "if(abs(f.x)>10.)"
         "{"
           "if(f.x>10.)"
             "m*=(9.99-s.x)/m.x,l=vec3(-1.,0.,0.),f=m+s,u=f.yz,d=t(f,u);"
           "else"
             " m*=(-9.99-s.x)/m.x,l=vec3(1.,0.,0.),f=m+s,u=f.yz*vec2(-1.,1.),d=t(f,u);"
         "}"
       "if(abs(f.y)>10.)"
         "{"
           "if(f.y>10.)"
             "m*=(9.99-s.y)/m.y,l=vec3(0.,-1.,0.),f=m+s,u=f.xz*vec2(-1.,1.),d=t(f,u);"
           "else"
             " m*=(-9.99-s.y)/m.y,l=vec3(0.,1.,0.),f=m+s,u=f.xz,d=t(f,u);"
         "}"
       "if(abs(f.z)>10.)"
         "{"
           "if(f.z>10.)"
             "m*=(9.99-s.z)/m.z,l=vec3(0.,0.,-1.),f=m+s,u=f.xy*vec2(-1.,1.),d=t(f,u);"
           "else"
             " m*=(-9.99-s.z)/m.z,l=vec3(0.,0.,1.),f=m+s,u=f.xy,d=t(f,u);"
         "}"
       "a=d*vec3(t(-length(m)*.04));"
       "r+=a*y;"
       "y*=a;"
       "g=reflect(e,l);"
       "s=f;"
       "e=g;"
     "}"
   "return r;"
 "}"
 "void main()"
 "{"
   "vec3 t=v(eyePos,normalize(wpos-eyePos));"
   "gl_FragColor=gl_Color*vec4(t,1.);"
 "}";

const char *skybox_frag =
 "uniform sampler2D tex;"
 "uniform float angle,time;"
 "varying vec3 pos;"
 "vec4 t(vec3 t)"
 "{"
   "float v=atan(t.x,t.y+.01),l=-pos.z;"
   "vec4 r=vec4(0.);"
   "for(int f=0;f<8;++f)"
     "{"
       "float s=float(f),x=l/(1.+s)+time*.01*(2.+s),y=angle+2.5*v/3.14159;"
       "r+=texture2D(tex,vec2(x,y))/(1.+.3*s);"
     "}"
   "return r;"
 "}"
 "void main()"
 "{"
   "vec4 v=t(pos);"
   "gl_FragColor=vec4(v.xyz,1.);"
 "}";

const char *snake_frag =
 "varying vec3 normal;"
 "varying float profondeur;"
 "vec4 t(vec4 t,float v)"
 "{"
   "vec3 r=vec3(dot(vec3(.33),t.xyz));"
   "return vec4(mix(t.xyz,r,v),t.w);"
 "}"
 "void main()"
 "{"
   "vec3 t=normal,v=vec3(0.,0.,-1.);"
   "float r=max(0.,dot(t,v));"
   "vec4 s=gl_Color*vec4(.1+.9*vec3(r),r);"
   "gl_FragColor=s*exp(-profondeur*.1);"
 "}";

const char *water_frag =
 "uniform sampler2D tex,texu,texv;"
 "uniform float spacing,ratio;"
 "void main()"
 "{"
   "vec2 t=gl_TexCoord[0].xy;"
   "vec4 v=texture2D(tex,t*2.5);"
   "vec2 s=vec2(spacing)*vec2(texture2D(texu,t).x,texture2D(texv,t).x),r=t-s;"
   "v=texture2D(tex,r)*.97553;"
   "vec2 y=vec2(spacing)*vec2(texture2D(texu,r).x,texture2D(texv,r).x),d=r-y;"
   "v+=texture2D(tex,d)*.904514;"
   "vec2 f=vec2(spacing)*vec2(texture2D(texu,d).x,texture2D(texv,d).x),l=d-f;"
   "v+=texture2D(tex,r)*.793904;"
   "vec2 e=vec2(spacing)*vec2(texture2D(texu,l).x,texture2D(texv,l).x),x=l-e;"
   "v+=texture2D(tex,d)*.654526;"
   "vec2 m=vec2(spacing)*vec2(texture2D(texu,x).x,texture2D(texv,x).x),g=x-m;"
   "v+=texture2D(tex,r)*.500023;"
   "vec2 p=vec2(spacing)*vec2(texture2D(texu,g).x,texture2D(texv,g).x),a=g-p;"
   "v+=texture2D(tex,d)*.345518;"
   "vec2 c=vec2(spacing)*vec2(texture2D(texu,a).x,texture2D(texv,a).x),u=a-c;"
   "v+=texture2D(tex,r)*.206134;"
   "vec2 b=vec2(spacing)*vec2(texture2D(texu,u).x,texture2D(texv,u).x),z=u-b;"
   "v+=texture2D(tex,d)*.0955133;"
   "vec2 n=t+s;"
   "v+=texture2D(tex,n)*.97553;"
   "vec2 i=vec2(spacing)*vec2(texture2D(texu,n).x,texture2D(texv,n).x),N=n+i;"
   "v+=texture2D(tex,N)*.904514;"
   "vec2 w=vec2(spacing)*vec2(texture2D(texu,N).x,texture2D(texv,N).x),o=N+w;"
   "v+=texture2D(tex,n)*.793904;"
   "vec2 A=vec2(spacing)*vec2(texture2D(texu,o).x,texture2D(texv,o).x),B=o+A;"
   "v+=texture2D(tex,N)*.654526;"
   "vec2 E=vec2(spacing)*vec2(texture2D(texu,B).x,texture2D(texv,B).x),h=B+E;"
   "v+=texture2D(tex,n)*.500023;"
   "vec2 F=vec2(spacing)*vec2(texture2D(texu,h).x,texture2D(texv,h).x),C=h+F;"
   "v+=texture2D(tex,N)*.345518;"
   "vec2 k=vec2(spacing)*vec2(texture2D(texu,C).x,texture2D(texv,C).x),j=C+k;"
   "v+=texture2D(tex,n)*.206134;"
   "vec2 D=vec2(spacing)*vec2(texture2D(texu,j).x,texture2D(texv,j).x),q=j+D;"
   "v+=texture2D(tex,N)*.0955133;"
   "vec2 S=(t-vec2(.5,.5))*vec2(1.,ratio);"
   "vec4 T=vec4(max(0.,1.-2.5*dot(S,S))),Z=gl_Color*v*vec4(.1)*T;"
   "gl_FragColor=Z;"
 "}";

const char *fly_frag =
 "uniform vec2 resolution;"
 "uniform float time;"
 "uniform sampler2D tex0,tex1,tex2;"
 "void main()"
 "{"
   "vec2 v=-1.+2.*gl_FragCoord.xy/resolution.xy,t;"
   "float r=time*.25,d=v.x*cos(r)-v.y*sin(r),x=v.x*sin(r)+v.y*cos(r);"
   "t.x=.25*d/abs(x);"
   "t.y=.2*time+.25/abs(x);"
   "gl_FragColor=vec4(texture2D(tex0,t).xyz*x*x,1.);"
 "}";

const char *distancefieldRaytrace_frag =
 "varying vec3 org,dir;"
 "float t(vec3 v,float t)"
 "{"
   "return abs(t-v.y);"
 "}"
 "float v(vec3 x,vec4 t)"
 "{"
   "return length(t.xyz-x)-t.w;"
 "}"
 "float s(vec3 t,vec4 v)"
 "{"
   "return length(vec2(v.x+.5*sin(t.y+t.z*2.),v.z)-t.xz)-v.w;"
 "}"
 "float s(vec3 x)"
 "{"
   "float r=t(x,-5.);"
   "r=min(r,t(x,5.));"
   "r=min(r,v(x,vec4(0,-2,15,1.5)));"
   "r=min(r,v(x,vec4(-8,0,20,2.)));"
   "r=min(r,v(x,vec4(-5,4,15,.5)));"
   "r=min(r,v(x,vec4(-1,3,15,2.)));"
   "r=min(r,v(x,vec4(2,-3,15,.5)));"
   "r=min(r,s(x,vec4(10,0,20,1.)));"
   "r=min(r,s(x,vec4(4,0,15,1.)));"
   "r=min(r,s(x,vec4(0,0,20,1.)));"
   "r=min(r,s(x,vec4(-2,0,25,1.)));"
   "r=min(r,s(x,vec4(-6,0,30,1.)));"
   "r=min(r,s(x,vec4(-12,0,35,1.)));"
   "return r;"
 "}"
 "vec3 t(vec3 t)"
 "{"
   "float v=.01;"
   "return normalize(vec3(s(t+vec3(v,0,0))-s(t-vec3(v,0,0)),s(t+vec3(0,v,0))-s(t-vec3(0,v,0)),s(t+vec3(0,0,v))-s(t-vec3(0,0,v))));"
 "}"
 "float n(vec3 t,vec3 v)"
 "{"
   "float r=.5,d=0.,x=1.;"
   "for(int f=0;f<6;f++)"
     "d+=(float(f)*r-s(t+v*float(f)*r))/x,x*=2.;"
   "return 1.-d;"
 "}"
 "void main()"
 "{"
   "float v,r=0.;"
   "vec3 x=org;"
   "for(int f=0;f<64;f++)"
     "r=s(x),x=x+r*dir;"
   "if(r>1.)"
     "{"
       "gl_FragColor=vec4(0,0,0,1);"
       "return;"
     "}"
   "vec3 d=t(x);"
   "float y=n(x,d);"
   "vec3 f=vec3(0,0,0),l[3],u[3];"
   "l[0]=vec3(-4,0,4);"
   "l[1]=vec3(2,3,8);"
   "l[2]=vec3(4,-2,24);"
   "u[0]=vec3(1.,.5,.4);"
   "u[1]=vec3(.4,.5,1.);"
   "u[2]=vec3(.2,1.,.5);"
   "for(int m=0;m<3;m++)"
     "{"
       "vec3 e,g;"
       "g=l[m]-x;"
       "e=normalize(g);"
       "v=length(g);"
       "v=max(0.,dot(e,d))/v*float(10);"
       "f+=v*u[m];"
     "}"
   "float m=min(1.,20./length(x-org));"
   "gl_FragColor=vec4(f*y,1)*m*m;"
 "}";

const char *gradation_frag =
 "varying vec4 p;"
 "void main()"
 "{"
   "float t=p.y*.5+.5;"
   "gl_FragColor=vec4(t,t,t,0);"
   "return;"
 "}";

const char *heart_frag =
 "uniform float time;"
 "uniform vec2 resolution;"
 "uniform vec4 mouse;"
 "void main()"
 "{"
   "vec2 v=(2.*gl_FragCoord.xy-resolution)/resolution.y;"
   "float t=mod(time,2.)/2.,r=pow(t,.2)*.5+.5;"
   "r-=r*.2*sin(t*6.2831*5.)*exp(-t*6.);"
   "v*=vec2(.5,1.5)+r*vec2(.5,-.5);"
   "float x=atan(v.x,v.y)/3.14159,e=length(v),y=abs(x),d=(13.*y-22.*y*y+10.*y*y*y)/(6.-5.*y),f=step(e,d)*pow(1.-e/d,.25);"
   "gl_FragColor=vec4(f,0.,0.,1.);"
 "}";

const char *julia_frag =
 "uniform vec2 resolution;"
 "uniform float time;"
 "uniform sampler2D tex0,tex1,tex2,tex3;"
 "void main()"
 "{"
   "vec2 v=-1.+2.*gl_FragCoord.xy/resolution.xy,t=vec2(cos(.25*time),sin(.25*time*1.423));"
   "float x=1000.;"
   "vec2 r=v*vec2(1.33,1.);"
   "for(int f=0;f<64;f++)"
     "{"
       "r=t+vec2(r.x*r.x-r.y*r.y,2.*r.x*r.y);"
       "float d=dot(r,r);"
       "if(d>100.)"
         "break;"
       "x=min(x,d);"
     "}"
   "float f=sqrt(sqrt(x))*.7;"
   "gl_FragColor=vec4(f,f,f,1.);"
 "}";

const char *kaleidoscope_frag =
 "uniform vec2 resolution;"
 "uniform float time;"
 "uniform sampler2D tex0,tex1,tex2,tex3;"
 "void main()"
 "{"
   "vec2 t=-1.+2.*gl_FragCoord.xy/resolution.xy,v;"
   "float r=atan(t.y,t.x),y=sqrt(dot(t,t));"
   "v.x=7.*r/3.1416;"
   "v.y=-time+sin(7.*y+time)+.7*cos(time+7.*r);"
   "float x=.5+.5*(sin(time+7.*y)+.7*cos(time+7.*r));"
   "vec3 s=texture2D(tex0,v*.5).xyz;"
   "gl_FragColor=vec4(s*x,1.);"
 "}";

const char *kinder_painter_frag =
 "uniform vec2 resolution;"
 "uniform float time;"
 "uniform vec4 mouse;"
 "uniform sampler2D tex0,tex1,tex2,tex3;"
 "vec4 v[6],f[6];"
 "float t(in vec4 v,in vec3 t,in vec3 f)"
 "{"
   "vec3 r=t-v.xyz;"
   "float s=dot(f.xz,f.xz),d=dot(f.xz,r.xz),y=dot(r.xz,r.xz)-v.w*v.w,x;"
   "x=d*d-s*y;"
   "if(x>0.)"
     "x=-(d+sqrt(x))/s;"
   "return x-.001;"
 "}"
 "float s(in vec4 v,in vec3 t,in vec3 x)"
 "{"
   "vec3 r=t-v.xyz;"
   "float s=dot(x,r),d=dot(r,r)-v.w*v.w,i=s*s-d;"
   "if(i>0.)"
     "i=-s-sqrt(i);"
   "return i-.001;"
 "}"
 "bool s(in vec4 v,in vec3 t,in vec3 x,in float y)"
 "{"
   "vec3 r=t-v.xyz;"
   "float s=dot(x,r),d=dot(r,r)-v.w*v.w,f=s*s-d;"
   "bool i=false;"
   "if(f>0.)"
     "f=-s-sqrt(f),i=f>0.&&f<y;"
   "return i;"
 "}"
 "bool t(in vec4 v,in vec3 t,in vec3 x,in float r)"
 "{"
   "vec3 f=t-v.xyz;"
   "float s=dot(x.xz,x.xz),d=dot(x.xz,f.xz),y=dot(f.xz,f.xz)-v.w*v.w,e=d*d-s*y;"
   "bool i=false;"
   "if(e>0.)"
     "e=-(d+sqrt(e)),i=e>0.&&e<r*s;"
   "return i;"
 "}"
 "float n(in vec4 t,in vec3 v,in vec3 r)"
 "{"
   "float f=dot(t.xyz,r);"
   "f=sign(f)*max(abs(f),.001);"
   "float i=-(dot(t.xyz,v)+t.w)/f;"
   "return i-.001;"
 "}"
 "vec3 n(in vec4 v,in vec4 t,in vec3 x,out vec2 r)"
 "{"
   "vec3 c;"
   "if(t.w>2.5)"
     "c.xz=x.xz-v.xz,c.y=0.,c=c/v.w,r=vec2(c.x,x.y);"
   "else"
     " if(t.w>1.5)"
       "c=v.xyz,r=x.xz*.2;"
     "else"
       " c=x-v.xyz,c=c/v.w,r=c.xy;"
   "return c;"
 "}"
 "vec4 D(in vec4 v,in vec4 t,in bool r)"
 "{"
   "return r?t:v;"
 "}"
 "float x(in float v,in float t,in bool r)"
 "{"
   "return r?t:v;"
 "}"
 "int m(in int v,in int t,in bool r)"
 "{"
   "return r?t:v;"
 "}"
 "float D(in vec3 x,in vec3 r,out vec4 e,out vec4 y)"
 "{"
   "float u=10000.,d;"
   "y.w=-1.;"
   "bool l;"
   "d=s(v[0],x,r);"
   "l=d>0.&&d<u;"
   "e=m(e,v[0],l);"
   "y=m(y,f[0],l);"
   "u=m(u,d,l);"
   "d=s(v[1],x,r);"
   "l=d>0.&&d<u;"
   "e=m(e,v[1],l);"
   "y=m(y,f[1],l);"
   "u=m(u,d,l);"
   "d=t(v[2],x,r);"
   "l=d>0.&&d<u;"
   "e=m(e,v[2],l);"
   "y=m(y,f[2],l);"
   "u=m(u,d,l);"
   "d=t(v[3],x,r);"
   "l=d>0.&&d<u;"
   "e=m(e,v[3],l);"
   "y=m(y,f[3],l);"
   "u=m(u,d,l);"
   "d=n(v[4],x,r);"
   "l=d>0.&&d<u;"
   "e=m(e,v[4],l);"
   "y=m(y,f[4],l);"
   "u=m(u,d,l);"
   "d=n(v[5],x,r);"
   "l=d>0.&&d<u;"
   "e=m(e,v[5],l);"
   "y=m(y,f[5],l);"
   "u=m(u,d,l);"
   "return u;"
 "}"
 "bool r(in vec3 x,in vec3 r,in float f)"
 "{"
   "float m;"
   "bvec4 e;"
   "e.x=s(v[0],x,r,f);"
   "e.y=s(v[1],x,r,f);"
   "e.z=t(v[2],x,r,f);"
   "e.w=t(v[3],x,r,f);"
   "return any(e);"
 "}"
 "vec4 D(in vec3 t,in vec4 v,in vec4 x,in vec3 s,in vec4 f,out vec4 e)"
 "{"
   "vec3 y;"
   "float m,d;"
   "vec2 l;"
   "y=n(v,x,t,l);"
   "m=dot(y,f.xyz);"
   "e.xyz=reflect(s,y);"
   "d=dot(e.xyz,f.xyz);"
   "d=max(d,0.);"
   "d=d*d;"
   "d=d*d;"
   "if(r(t,f.xyz,f.w))"
     "m=0.;"
   "x*=texture2D(tex0,l);"
   "m=max(m,0.);"
   "x=x*(vec4(.3,.34,.38,1)+.5*vec4(1.,.95,.8,1.)*m)+.5*d;"
   "m=dot(y,-s);"
   "e.w=m;"
   "m=1.-m*m;"
   "m=m*m;"
   "x=x+.35*vec4(m);"
   "return x;"
 "}"
 "void main()"
 "{"
   "vec4 t,x,r;"
   "vec3 s;"
   "vec4 y;"
   "vec2 e=-1.+2.*gl_FragCoord.xy/resolution.xy;"
   "e*=vec2(resolution.x/resolution.y,1.);"
   "v[0]=vec4(1.2*sin(2.07342*time),0.,1.8*sin(2.45041*time+1.),1);"
   "v[1]=vec4(1.5*sin(1.94776*time+4.),sin(1.8221*time+1.9),1.8*sin(1.8221*time),1);"
   "v[2]=vec4(-1.2,0.,-0.,.4);"
   "v[3]=vec4(1.2,0.,-0.,.4);"
   "v[4]=vec4(0.,1.,0.,2.);"
   "v[5]=vec4(0.,-1.,0.,2.);"
   "f[0]=vec4(.9,.8,.6,1.);"
   "f[1]=vec4(1.,.6,.4,1.);"
   "f[2]=vec4(.8,.6,.5,3.);"
   "f[3]=vec4(.5,.5,.7,3.);"
   "f[4]=vec4(1.,.9,.9,2.);"
   "f[5]=vec4(1.,.9,.9,2.);"
   "float m=.15*time-6.2831*mouse.x/resolution.x,d=2.+3.*mouse.y/resolution.y;"
   "vec2 l=vec2(cos(m),sin(m));"
   "vec3 z=normalize(vec3(e.x*l.x-l.y,e.y,l.x+e.x*l.y)),i=vec3(d*l.y,0.,-d*l.x);"
   "float u=D(i,z,x,r);"
   "vec3 g=i+z*u;"
   "t.xyz=vec3(0.,1.5,-3.)-g;"
   "t.w=length(t.xyz);"
   "t.xyz=t.xyz/t.w;"
   "r=D(g,x,r,z,t,y);"
   "vec4 c,n;"
   "u=D(g,y.xyz,x,c);"
   "g=g+y.xyz*u;"
   "t.xyz=vec3(0.,1.5,-1.)-g;"
   "t.w=length(t.xyz);"
   "t.xyz=t.xyz/t.w;"
   "c=D(g,x,c,y.xyz,t,n);"
   "r=mix(r,c,.5-.5*y.w);"
   "gl_FragColor=r;"
 "}";

const char *leizex_frag =
 "#extension GL_EXT_gpu_shader4:enable\n"
 "uniform vec2 resolution;"
 "uniform float time;"
 "uniform sampler2D tex0,tex1,tex2,tex3;"
 "float t(int v)"
 "{"
   "return v=v<<13^v,v=v*(v*v*15731+789221)+1376312589&2147483647,float(v);"
 "}"
 "float t(in vec3 v,int s)"
 "{"
   "ivec3 r=ivec3(floor(v));"
   "vec3 f=fract(v);"
   "f=f*f*(3.-2.*f);"
   "int e=r.x+r.y*57+113*r.z+s;"
   "float m=mix(mix(mix(t(e+0),t(e+1),f.x),mix(t(e+57),t(e+58),f.x),f.y),mix(mix(t(e+113),t(e+114),f.x),mix(t(e+170),t(e+171),f.x),f.y),f.z);"
   "return 1.-m*9.31323e-10;"
 "}"
 "vec2 v(in vec3 v)"
 "{"
   "ivec3 r=ivec3(floor(v));"
   "vec3 s=fract(v);"
   "vec2 f=vec2(1.,1.);"
   "for(int e=-1;e<=1;e++)"
     "for(int x=-1;x<=1;x++)"
       "for(int y=-1;y<=1;y++)"
         "{"
           "int m=r.x+y+57*(r.y+x)+113*(r.z+e);"
           "vec3 d=vec3(float(y),float(x),float(e))-s+vec3(t(m),t(m+1217),t(m+2513))/2.14748e+09;"
           "float i=dot(d,d);"
           "if(i<f.x)"
             "f.y=f.x,f.x=i;"
           "else"
             " if(i<f.y)"
               "f.y=i;"
         "}"
   "return.25*sqrt(f);"
 "}"
 "float s(in vec3 v)"
 "{"
   "return.5*t(v,0)+.25*t(v*2.,0)+.125*t(v*4.,0)+.0625*t(v*8.,0);"
 "}"
 "float s(in vec3 x,out float r)"
 "{"
   "vec3 f=mod(vec3(1024.)+x,1.)-.5;"
   "float e=sqrt(dot(f,f))-.09,y=t(4.*x,0);"
   "e+=.8*y;"
   "r=clamp(-1.5*y,0.,1.);"
   "vec2 s=v(16.*x);"
   "float m=clamp(s[1]-s[0],0.,1.);"
   "e-=m;"
   "r*=clamp(m*12.,0.,1.);"
   "return e;"
 "}"
 "vec3 m(in vec3 t)"
 "{"
   "float v,x=.0002;"
   "vec3 r=vec3(s(t+vec3(x,0.,0.),v)-s(t-vec3(x,0.,0.),v),s(t+vec3(0.,x,0.),v)-s(t-vec3(0.,x,0.),v),s(t+vec3(0.,0.,x),v)-s(t-vec3(0.,0.,x),v));"
   "return normalize(r);"
 "}"
 "void m(out vec3 v,out vec3 r,in vec2 x,float y)"
 "{"
   "vec2 s=x;"
   "float e=s.x*s.x*.32+s.y*s.y;"
   "vec2 f=s*(7.-sqrt(37.5-11.5*e))/(e+1.);"
   "vec3 m=vec3(0.,1.5,2.);"
   "r=m+vec3(-sin(6.28319*y/20.),.75*cos(6.28319*y/20.+.5),-cos(6.28319*y/20.));"
   "m+=.075*vec3(t(vec3(2.*y,0.,.5),0),t(vec3(2.*y,.1,.4),7),t(vec3(2.*y,.2,.3),9));"
   "float d=.1*t(vec3(2.*y,0.,0.),13);"
   "vec3 l=vec3(0.,cos(d),sin(d)),i=normalize(m-r),u=normalize(cross(i,l)),c=normalize(cross(u,i));"
   "v=normalize(f.x*u+f.y*c+i);"
 "}"
 "vec3 m(in vec3 t,float v,in vec3 r)"
 "{"
   "float x=.0005,y=s(256.*r);"
   "vec3 f=vec3(s(256.*(r+vec3(x,0.,0.)))-y,s(256.*(r+vec3(0.,x,0.)))-y,s(256.*(r+vec3(0.,0.,x)))-y);"
   "return normalize(t+v*f);"
 "}"
 "void main()"
 "{"
   "vec2 v=-1.+2.*gl_FragCoord.xy/resolution.xy;"
   "vec3 t,x;"
   "m(x,t,v,time);"
   "float r,y;"
   "vec3 f,e;"
   "for(r=.1;r<5.;)"
     "{"
       "e=t+r*x;"
       "float d=s(e,y);"
       "if(d<.001)"
         "break;"
       "r+=d*.12;"
     "}"
   "f=m(e);"
   "vec3 d=vec3(1.+.5*s(96.*e)),i=m(f,1.,.25*e),l=vec3(.8,.5,-.1);"
   "float c=clamp(dot(i,l),0.,1.);"
   "vec3 u=vec3(.5,.55,.6)+vec3(.6,.5,.3)*c*3.;"
   "d=d*u*y;"
   "d=d/(1.+r)+vec3(1.06,1.14,1.)*(1.-exp2(-.25*r));"
   "d=(d*d+d)*.5;"
   "d=clamp(d*vec3(1.,1.2,1.),0.,1.);"
   "d*=.5+.5*(1.-v.x)*(1.+v.x);"
   "gl_FragColor=vec4(d,1.);"
 "}";

const char *lunaquatic_frag =
 "#extension GL_EXT_gpu_shader4:enable\n"
 "vec4 v;"
 "uniform vec2 resolution;"
 "uniform float time;"
 "vec4 t;"
 "vec3 r,x,f,y;"
 "float s,d,e,l=.0001;"
 "float m(float v)"
 "{"
   "return clamp(v,0.,1.);"
 "}"
 "float m(float v,float x,float t)"
 "{"
   "return(v-x)/(t-x);"
 "}"
 "vec3 m(vec3 v,float t)"
 "{"
   "return vec3(cos(t)*v.x-sin(t)*v.z,v.y,sin(t)*v.x+cos(t)*v.z);"
 "}"
 "vec3 n(vec3 v,float t)"
 "{"
   "return vec3(v.x,v.y*cos(t)-v.z*sin(t),v.y*sin(t)+v.z*cos(t));"
 "}"
 "float n(vec2 v)"
 "{"
   "int t=int(v.x*40.+v.y*6400.);"
   "t=t<<13^t;"
   "return 1.-float(t*(t*t*15731+789221)+1376312589&2147483647)/1.07374e+09;"
 "}"
 "float i(float v)"
 "{"
   "return v*.5+.5;"
 "}"
 "float i(float t,float x,float y)"
 "{"
   "return pow((i(sin(e*2.*(t+x+v.z*y)))+i(sin(e*(x-t-v.z*y)))+i(sin(e*(x+v.z*y)))+i(sin(e*3.*(t-v.z*y))))*.3,2.);"
 "}"
 "float D(vec2 v)"
 "{"
   "v=mod(v,1000.);"
   "vec2 r=fract(v);"
   "v-=r;"
   "vec2 t=r*r*(3.-2.*r);"
   "return mix(mix(n(v+vec2(0.)),n(v+vec2(1.,0.)),t.x),mix(n(v+vec2(0.,1.)),n(v+vec2(1.)),t.x),t.y);"
 "}"
 "float c(vec2 r)"
 "{"
   "float e=v.z-d,y=mix(1.,max(0.,t.w-t.y),1.-(e>0.&&length(r-t.xz)<e?1.:0.))/pow(1./max(0.,1.-length(t.xz-r)*.8),2.);"
   "r+=length(r-f.xy);"
   "r*=min(length(r-f.xy)*5.,4.);"
   "return i(r.x+v.z*.75,r.y*.5,.3)*.006+i(r.x*.1+v.z*.2,r.y*.1,.02)*.125-.15-y*2.;"
 "}"
 "vec3 p(vec3 v)"
 "{"
   "return normalize(vec3(i(v.x*160.-12.*cos(10.*v.z),v.z*140.,4.),8.,i(v.z*160.-12.*sin(10.*v.x),v.x*140.,4.))*2.-1.);"
 "}"
 "int D(vec3 v,vec3 t,float x,out float r)"
 "{"
   "float f,y,d=0.;"
   "for(float s=.1;s<x;s+=d)"
     "{"
       "v+=t*d;"
       "r=c(v.xz);"
       "if(v.y<=r)"
         "return r=s-d+d*(f-y)/(v.y-r+f-y),1;"
       "f=r;"
       "y=v.y;"
       "d=.002+s/(40.*clamp(t.y+1.,0.,1.));"
     "}"
   "return 0;"
 "}"
 "vec3 h(vec3 v)"
 "{"
   "return i(D(abs(v.xy*v.z+v.y*2.)))*vec3(.15)+i(D(1.5*abs(v.xy*v.z+v.y+10.)))*vec3(.15)+i(D(2.5*abs(v.xy*v.z+v.y+20.)))*vec3(.15);"
 "}"
 "vec4 D(vec3 t,vec3 x)"
 "{"
   "vec4 f=vec4(0.);"
   "vec3 d=vec3(70.,20.,100.);"
   "float y=dot(x,normalize(d-t))-.95;"
   "if(y>0.)"
     "{"
       "y=length(d-t)-y*800.;"
       "vec3 m=t+x*y,l=normalize(d-m);"
       "vec2 c=.5+.5*vec2(atan(l.z,l.x),acos(l.y))/e*vec2(5.,50.);"
       "f.xyz=max(0.,.2+dot(normalize(m-r),l))*(i(c.x*.5+v.z*.1,c.y*.5,0.)+.5)*.15*vec3(1.,0.,1.);"
       "f.w=1.;"
     "}"
   "else"
     " y=s*99.;"
   "vec3 m=vec3(-.96,.96,-.2);"
   "float l=dot(m,d-t)/dot(m,x);"
   "if(l>0.&&l<y)"
     "{"
       "float z=length(d-(t+x*l));"
       "if(z>52.&&z<80.)"
         "f.xyz=mix(f.xyz,vec3(.8,.64,.4),l/200.*i(sin((z-50.)/30.*D(vec2(z,3.)))));"
       "f.w=f.w<1.?3.*length(f):f.w;"
     "}"
   "return vec4(max(vec3(0.),f.xyz*.3)*clamp(dot(x,vec3(0.,1.,0.))*8.,0.,1.),f.w);"
 "}"
 "vec3 D(vec3 t,vec3 f,int r)"
 "{"
   "vec3 e=max(vec3(0.),(max(vec3(0.),pow(dot(x,f),6.))*.7-f.y)*mix(vec3(1.,.5,0.),vec3(1.),min(1.,x.y*1.5))+x.y*3.);"
   "float s=atan(f.x,f.z),y=acos(f.y/length(f)),d=smoothstep(0.,.5,i(.5*D(300.*vec2(s,y)))+i(.75*D(500.*vec2(s,y)))-1.25)*m(1.-x.y*5.);"
   "if(r>0)"
     "{"
       "vec4 c=D(t,f);"
       "e+=d*m(1.-c.w)+c.xyz;"
     "}"
   "f.xy+=t.xy*l;"
   "e+=(h(normalize(f+vec3(sin(v.z*.1),0.,cos(v.z*.1))*.1)*3.)+h(normalize(f+vec3(sin(v.z*.1),0.,cos(v.z*.1))*.2)*5.)*.1+h(normalize(f+vec3(sin(v.z*.1),0.,cos(v.z*.1))*.4)*7.)*.1-h(normalize(f+vec3(sin(v.z*.2),0.,0)*.5))*1.5)*m(f.y+.5);"
   "return e;"
 "}"
 "float g(vec3 r)"
 "{"
   "float f=v.z>80.&&v.z<112.?1.:0.;"
   "r=n(m(n(m(r-t.xyz,3.*v.z),3.*v.z),f*sin(3.*v.z+3.*r.y)),f*sin(3.*v.z+3.*r.x));"
   "r*=4.+10.*max(0.,v.z-d);"
   "return-.4+r.x*r.x*r.x*r.x*r.x*r.x*r.x*r.x+r.y*r.y*r.y*r.y*r.y*r.y*r.y*r.y+r.z*r.z*r.z*r.z*r.z*r.z*r.z*r.z;"
 "}"
 "float D(vec3 v,vec3 x,float t,float r,float y)"
 "{"
   "float c,f,d,l=(r-t)/y;"
   "for(float e=t;e<r;e+=l)"
     "{"
       "vec3 m=v+e*x;"
       "float i=g(m);"
       "if(i<=0.)"
         "{"
           "for(int u=0;u<9;u++)"
             "{"
               "d=(c+e)/2.;"
               "if(g(v+d*x)<0.)"
                 "e=d;"
               "else"
                 " c=d;"
             "}"
           "return d;"
         "}"
       "c=e;"
       "f=i;"
     "}"
   "return s;"
 "}"
 "void c(vec2 x,vec3 f,inout vec3 r)"
 "{"
   "float s=length(x-t.xz),y=v.z-d;"
   "if(y>0.&&s<y)"
     "{"
       "float l=y*.9;"
       "if(s<y-(y-l))"
         "{"
           "float z=m((s-l)/(y-(y-l)*2.-l));"
           "r*=1.-z*1.5;"
           "r+=(1.-z*.8)*pow(i(f.x)+i(f.y),2.*i(D(.4*v.z+x*20.))*i(D(10.+x*5.))+1.)*vec3(1.5,.75,.5);"
         "}"
       "if(s>y-(y-l)*2.)"
         "r+=cos((s-l)/(y-l)*e*.5)*vec3(1.5,.75,.5);"
     "}"
 "}"
 "vec3 c(vec3 v,vec3 t)"
 "{"
   "float r=(.1-v.y)/t.y,y=200.;"
   "vec3 f=D(v,t,1);"
   "if(t.y<-.01&&D(v+t*r,t,y,y)>0)"
     "{"
       "y+=r;"
       "vec3 e=v+t*y,d=normalize(normalize(vec3(c(e.xz-vec2(l,0.))-c(e.xz+vec2(l,0.)),l*2.,c(e.xz-vec2(0.,l))-c(e.xz+vec2(0.,l))))+(p(e*.2)*1.5+p(e*.1))*max(0.,1.-y/s*7.));"
       "f=max(0.,dot(d,x)+pow(max(0.,dot(d,normalize(x-t))),2.))*D(e,reflect(t,d),1);"
       "c(e.xz,d,f);"
       "f=mix(f,D(v,t,0),m(y/s*1.6+m(dot(normalize(d+t*.2),t))));"
     "}"
   "return f;"
 "}"
 "void main()"
 "{"
   "s=9.;"
   "d=127.;"
   "e=3.1416;"
   "v.xy=-1.+2.*gl_FragCoord.xy/resolution.xy;"
   "v.z=time;"
   "y=normalize(vec3(v.xy-.5,1.));"
   "t=vec4(10.,i(sin(v.z+4.)),13.,0.);"
   "f=vec3(0.,.25,0.);"
   "float z=v.z;"
   "if(z<16.)"
     "z=m(z,0.,16.),z=1.-pow(1.-z,2.),r=vec3(-400.,100.-z*450.,1000.),z=(z-1.)*.7,y=n(y,-z);"
   "else"
     " if(z<32.)"
       "z=m(z,16.,32.),z=1.-pow(1.-z,2.),r=vec3(-400.,-350.+z*600.,1000.),f.y-=z*.1;"
     "else"
       " if(z<40.)"
         "r=vec3(-400.,250.,1000.),f.y-=.1;"
       "else"
         " if(z<64.)"
           "{"
             "int u=int((z-40.)/6.);"
             "if(u>=3)"
               "t.w=1.;"
             "r=vec3(-400.,min(250.,i(n(vec2(u,2)))*400.),1000.);"
             "f.xz+=vec2(.1,20.)*vec2(n(vec2(u,5.)),n(vec2(u,7.)));"
             "f=mix(f+vec3(.008)*abs(vec3(n(vec2(u,8.)),0.,n(vec2(u,10.)))),f+vec3(.75)*abs(vec3(n(vec2(u,11.)),0.,n(vec2(u,13.)))),z-40.-float(u));"
             "f.y=.2;"
             "y=m(y,n(vec2(u,14.))*e);"
           "}"
         "else"
           "{"
             "t.w=1.;"
             "r=vec3(-400.,i(sin(z+10.))*250.,1000.);"
             "float u=smoothstep(118.,120.,z);"
             "f.xz=t.xz+mix(vec2(sin(z*.6),cos(z*.6))*mix(sin(z*1.5+10.)+2.,2.,u),vec2(0.,2.+.75*(z-d)),smoothstep(-1.,1.,z-d));"
             "f.y=mix(i(sin(z*3.)*(1.-u))*.3,0.,smoothstep(-1.,1.,z-d))+.2;"
             "vec2 a=normalize(t.xz-f.xz);"
             "y=m(y,atan(a.y,a.x)-e/2.);"
           "}"
   "x=normalize(r-f);"
   "float u=length(f-t.xyz)-1.,a=t.w==1.?D(f,y,u,u+2.,99.):s;"
   "if(a<s)"
     "{"
       "f+=a*y;"
       "vec3 b=normalize(vec3(g(vec3(f.x-l,f.y,f.z))-g(vec3(f.x+l,f.y,f.z)),g(vec3(f.x,f.y-l,f.z))-g(vec3(f.x,f.y+l,f.z)),g(vec3(f.x,f.y,f.z-l))-g(vec3(f.x,f.y,f.z+l))));"
       "y=reflect(y,b);"
     "}"
   "gl_FragColor=vec4(c(f,y)*m(sin(v.z/150.*e)*10.),1.);"
 "}";

const char *mandelbulb_frag =
 "uniform vec2 resolution;"
 "uniform float time;"
 "bool t(in vec4 v,in vec3 t,in vec3 x,out vec2 f)"
 "{"
   "vec3 r=t-v.xyz;"
   "float s=dot(r,x),d=dot(r,r)-v.w*v.w,y=s*s-d;"
   "if(y<0.)"
     "return false;"
   "float e=sqrt(y);"
   "f.x=-s-e;"
   "f.y=-s+e;"
   "return true;"
 "}"
 "const int r=7;"
 "const float v=100.;"
 "bool t(in vec3 t,out float f,out vec4 y)"
 "{"
   "vec4 x=vec4(100.);"
   "vec3 e=t;"
   "float d=dot(e,e);"
   "if(d>v)"
     "return f=.5*log(d)/pow(8.,0.),y=vec4(1.),false;"
   "for(int s=1;s<r;s++)"
     "{"
       "\n#if 0\n"
       "float m=sqrt(dot(e,e)),l=acos(e.y/m),i=atan(e.x,e.z);"
       "m=pow(m,8.);"
       "l=l*8.;"
       "i=i*8.;"
       "e=t+m*vec3(sin(l)*sin(i),cos(l),sin(l)*cos(i));"
       "\n#else\n"
       "float z=e.x,c=z*z,g=c*c,u=e.y,a=u*u,b=a*a,n=e.z,p=n*n,o=p*p,w=c+p,N=inversesqrt(w*w*w*w*w*w*w),h=g+b+o-6.*a*p-6.*c*a+2.*p*c,B=c-a+p;"
       "e.x=t.x+64.*z*u*n*(c-p)*B*(g-6.*c*p+o)*h*N;"
       "e.y=t.y+-16.*a*w*B*B+h*h;"
       "e.z=t.z+-8.*u*B*(g*g-28.*g*c*p+70.*g*o-28.*c*p*o+o*o)*h*N;"
       "\n#endif\n"
       "d=dot(e,e);"
       "x=min(x,vec4(e.xyz*e.xyz,d));"
       "if(d>v)"
         "return y=x,f=.5*log(d)/pow(8.,float(s)),false;"
     "}"
   "y=x;"
   "f=0.;"
   "return true;"
 "}"
 "bool t(in vec3 v,in vec3 x,out float r,in float y,out vec3 f,out vec4 d,float s)"
 "{"
   "vec4 e=vec4(0.,0.,0.,1.25);"
   "vec2 m;"
   "if(!t(e,v,x,m))"
     "return false;"
   "if(m.y<.001)"
     "return false;"
   "if(m.x<.001)"
     "m.x=.001;"
   "if(m.y>y)"
     "m.y=y;"
   "float i;"
   "vec3 u;"
   "vec4 l;"
   "float z=1./sqrt(1.+s*s);"
   "for(float g=m.x;g<m.y;)"
     "{"
       "vec3 c=v+x*g;"
       "float n=clamp(.001*g*z,1e-06,.005),a=n*.1;"
       "vec4 b;"
       "float p;"
       "if(t(c,p,l))"
         "return r=g,f=normalize(u),d=l,true;"
       "float o;"
       "t(c+vec3(a,0.,0.),o,b);"
       "float w;"
       "t(c+vec3(0.,a,0.),w,b);"
       "float N;"
       "t(c+vec3(0.,0.,a),N,b);"
       "u=vec3(o-p,w-p,N-p);"
       "i=.5*p*a/length(u);"
       "if(i<n)"
         "return d=l,f=normalize(u),r=g,true;"
       "g+=i;"
     "}"
   "return false;"
 "}"
 "void main()"
 "{"
   "vec2 v=-1.+2.*gl_FragCoord.xy/resolution.xy,f=v*vec2(1.33,1.);"
   "vec3 x=vec3(.577,.577,.577),r=vec3(-.707,0.,.707);"
   "float y=1.,d=1.4+.2*cos(6.28318*time/20.);"
   "vec3 e=vec3(d*sin(6.28318*time/20.),.3-.4*sin(6.28318*time/20.),d*cos(6.28318*time/20.)),i=vec3(0.,.1,0.),s=normalize(i-e),l=vec3(0.,1.,0.),m=normalize(cross(s,l)),c=normalize(cross(m,s)),z=normalize(f.x*m+f.y*c+1.5*s),u,g;"
   "vec4 n;"
   "float p;"
   "if(!t(e,z,p,1e+20,u,n,y))"
     "g=1.3*vec3(1.,.98,.9)*(.7+.3*z.y);"
   "else"
     "{"
       "vec3 a=e+p*z;"
       "float w=clamp(.2+.8*dot(x,u),0.,1.);"
       "w=w*w;"
       "float b=clamp(.3+.7*dot(r,u),0.,1.),o=clamp(1.25*n.w-.4,0.,1.);"
       "o=o*o*.5+.5*o;"
       "float N;"
       "vec3 B;"
       "vec4 h;"
       "if(w>.001)"
         "if(t(a,x,N,1e+20,B,h,y))"
           "w=.1;"
       "g=vec3(1.,1.,1.);"
       "g=mix(g,vec3(.8,.6,.2),sqrt(n.x)*1.25);"
       "g=mix(g,vec3(.8,.3,.3),sqrt(n.y)*1.25);"
       "g=mix(g,vec3(.7,.4,.3),sqrt(n.z)*1.25);"
       "g*=(.5+.5*u.y)*vec3(.14,.15,.16)*.8+w*vec3(1.,.85,.4)+.5*b*vec3(.08,.1,.14);"
       "g*=vec3(pow(o,.8),pow(o,1.),pow(o,1.1));"
       "g=1.5*(g*.15+.85*sqrt(g));"
     "}"
   "vec2 a=v*.5+.5;"
   "g*=.7+4.8*a.x*a.y*(1.-a.x)*(1.-a.y);"
   "g=clamp(g,0.,1.);"
   "gl_FragColor=vec4(g,1.);"
 "}";

const char *mandel_frag =
 "uniform vec2 resolution;"
 "uniform float time;"
 "uniform sampler2D tex0,tex1,tex2,tex3;"
 "void main()"
 "{"
   "vec2 v=-1.+2.*gl_FragCoord.xy/resolution.xy;"
   "v.x*=resolution.x/resolution.y;"
   "float t=.62+.38*sin(.1*time),r=cos(.1*(1.-t)*time),x=sin(.1*(1.-t)*time);"
   "t=pow(t,8.);"
   "vec2 s=vec2(v.x*r-v.y*x,v.x*x+v.y*r),d=vec2(-.745,.186)+s*t,y=vec2(0.),f=y*y;"
   "float e,m=0.;"
   "for(int u=0;u<256;u++)"
     "{"
       "y=d+vec2(y.x*y.x-y.y*y.y,2.*y.x*y.y);"
       "e=dot(y,y);"
       "if(e>1024.)"
         "break;"
       "m+=1.;"
     "}"
   "m=m+1.-log2(.5*log2(e));"
   "m=sqrt(m/256.);"
   "gl_FragColor=vec4(.5+.5*cos(6.2831*m),.5+.5*cos(6.2831*m+.4),.5+.5*cos(6.2831*m+.7),1.);"
 "}";

const char *metatunnel_frag =
 "uniform vec2 resolution;"
 "uniform float time;"
 "float v(vec3 v)"
 "{"
   "float r=distance(v,vec3(cos(time)+sin(time*.2),.3,2.+cos(time*.5)*.5));"
   "r*=distance(v,vec3(-cos(time*.7),.3,2.+sin(time*.5)));"
   "r*=distance(v,vec3(-sin(time*.2)*.5,sin(time),2.));"
   "r*=cos(v.y)*cos(v.x)-.1-cos(v.z*7.+time*7.)*cos(v.x*3.)*cos(v.y*4.)*.1;"
   "return r;"
 "}"
 "void main()"
 "{"
   "vec2 t=-1.+2.*gl_FragCoord.xy/resolution.xy;"
   "vec3 r=vec3(t.x,t.y*1.25-.3,0.),d=vec3(t.x+cos(time)*.3,t.y,1.)/64.;"
   "vec4 f=vec4(0.);"
   "float y=0.;"
   "for(int e=0;e<75;e++)"
     "{"
       "if(v(r+d*y)<.4)"
         "{"
           "y-=5.;"
           "for(int m=0;m<5;m++)"
             "{"
               "if(v(r+d*y)<.4)"
                 "break;"
               "y+=1.;"
             "}"
           "vec3 s=vec3(.01,0.,0.),x=vec3(0.);"
           "x.x=v(r+d*y)-v(vec3(r+d*y+s.xyy));"
           "x.y=v(r+d*y)-v(vec3(r+d*y+s.yxy));"
           "x.z=v(r+d*y)-v(vec3(r+d*y+s.yyx));"
           "x=normalize(x);"
           "f+=max(dot(vec3(0.,0.,-.5),x),0.)+max(dot(vec3(0.,-.5,.5),x),0.)*.5;"
           "break;"
         "}"
       "y+=5.;"
     "}"
   "gl_FragColor=f+vec4(.1,.2,.5,1.)*(y*.025);"
 "}";

const char *monjori_frag =
 "uniform vec2 resolution;"
 "uniform float time;"
 "uniform sampler2D tex0,tex1,tex2,tex3;"
 "void main()"
 "{"
   "vec2 v=-1.+2.*gl_FragCoord.xy/resolution.xy;"
   "float t=time*40.,r,x,f,y=.025,e,s,d,l;"
   "x=400.*(v.x*.5+.5);"
   "f=400.*(v.y*.5+.5);"
   "s=200.+sin(x*y+t/150.)*20.;"
   "r=200.+cos(f*y/2.)*18.+cos(x*y)*7.;"
   "d=sqrt(pow(s-x,2.)+pow(r-f,2.));"
   "l=f/d;"
   "x=d*cos(l)-t/2.;"
   "f=d*sin(l)-t/2.;"
   "r=sin(x*y)*176.+sin(x*y)*164.+d;"
   "e=(f+r+t/2.)*y;"
   "s=cos(e+d*v.x/1.3)*(x+x+t)+cos(l*y*6.)*(d+e/3.);"
   "e=sin(f*y)*144.-sin(x*y)*212.*v.x;"
   "e=(e+(f-x)*l+sin(d-(t+e)/7.)*10.+s/4.)*y;"
   "s+=cos(e*2.3*sin(t/350.-l))*184.*sin(l-(d*4.3+t/12.)*y)+tan(d*y+e)*184.*cos(d*y+e);"
   "s=mod(s/5.6,256.)/64.;"
   "if(s<0.)"
     "s+=4.;"
   "if(s>=2.)"
     "s=4.-s;"
   "r=d/350.;"
   "r+=sin(r*r*8.)*.52;"
   "f=(sin(t*y)+1.)/2.;"
   "gl_FragColor=vec4(f*s/1.6,s/2.+r/13.,s,1.)*r*v.x+vec4(s/1.3+r/8.,s/2.+r/18.,s,1.)*r*(1.-v.x);"
 "}";

const char *motion_blur_frag =
 "uniform vec2 resolution;"
 "uniform float time;"
 "uniform sampler2D tex0,tex1,tex2,tex3;"
 "vec3 v(in vec2 v,float t)"
 "{"
   "vec2 f;"
   "float r=t+time,y=atan(v.y,v.x),d=sqrt(dot(v,v)),x=d*(1.+.5*cos(r*1.7));"
   "f.x=.1*r+.05*v.y+.05*cos(-r+y*3.)/x;"
   "f.y=.1*r+.05*v.x+.05*sin(-r+y*3.)/x;"
   "float s=.8-.2*cos(r+3.*y);"
   "vec3 e=texture2D(tex0,f).xyz*s;"
   "return e*e;"
 "}"
 "void main()"
 "{"
   "vec2 t=-1.+2.*gl_FragCoord.xy/resolution.xy;"
   "vec3 r=vec3(0.);"
   "float f=0.;"
   "for(int e=0;e<20;e++)"
     "{"
       "vec3 m=v(t,f);"
       "r+=m;"
       "f+=.02;"
     "}"
   "r/=20.;"
   "gl_FragColor=vec4(3.*r,1.);"
 "}";

const char *multitexture_frag =
 "uniform vec2 resolution;"
 "uniform float time;"
 "uniform sampler2D tex0,tex1;"
 "void main()"
 "{"
   "vec2 v=-1.+2.*gl_FragCoord.xy/resolution.xy,t=vec2(cos(.5*time),sin(.5*time));"
   "mat2 r=.5*t.x*mat2(t.x,-t.y,t.y,t.x);"
   "vec3 y=texture2D(tex0,r*v).xyz,d=texture2D(tex1,.5*v+sin(.1*time)).xyz,x=d*y;"
   "gl_FragColor=vec4(x,1.);"
 "}";

const char *postprocessing_frag =
 "uniform vec2 resolution;"
 "uniform float time;"
 "uniform sampler2D tex0,tex1,tex2,tex3;"
 "void main()"
 "{"
   "vec2 v=gl_FragCoord.xy/resolution.xy,t=.5+(v-.5)*(.9+.1*sin(.2*time));"
   "vec3 x=texture2D(tex0,vec2(v.x,1.-v.y)).xyz,r;"
   "r.x=texture2D(tex0,vec2(t.x+.003,-t.y)).x;"
   "r.y=texture2D(tex0,vec2(t.x,-t.y)).y;"
   "r.z=texture2D(tex0,vec2(t.x-.003,-t.y)).z;"
   "r=clamp(r*.5+.5*r*r*1.2,0.,1.);"
   "r*=.5+8.*t.x*t.y*(1.-t.x)*(1.-t.y);"
   "r*=vec3(.8,1.,.7);"
   "r*=.9+.1*sin(10.*time+t.y*1000.);"
   "r*=.97+.03*sin(110.*time);"
   "float y=smoothstep(.2,.7,sin(time));"
   "r=mix(r,x,clamp(-2.+2.*v.x+3.*y,0.,1.));"
   "gl_FragColor=vec4(r,1.);"
 "}";

const char *quaternion_frag =
 "uniform vec2 resolution;"
 "uniform float time;"
 "uniform sampler2D tex0,tex1,tex2,tex3;"
 "float v(in vec3 v,in vec3 x,in vec4 t,out float r)"
 "{"
   "float y,f,d,e,s=1000.;"
   "vec4 m,l;"
   "r=0.;"
   "for(e=0.;e<6.;e+=d)"
     "{"
       "r+=1.;"
       "vec3 i=v+e*x;"
       "m=vec4(i,(t.y+t.x)*.3);"
       "f=1.;"
       "y=dot(m,m);"
       "for(int u=0;u<9;u++)"
         "{"
           "f*=4.*y;"
           "l.x=m.x*m.x-dot(m.yzw,m.yzw);"
           "l.yzw=2.*m.x*m.yzw;"
           "m=l+t;"
           "y=dot(m,m);"
           "if(y>4.)"
             "break;"
         "}"
       "d=.25*sqrt(y/f)*log(y);"
       "if(d<.0005)"
         "{"
           "s=e;"
           "break;"
         "}"
     "}"
   "return s;"
 "}"
 "vec3 v(in vec3 v,in vec4 t)"
 "{"
   "vec4 f,x,r[4],y=vec4(v,(t.y+t.x)*.3);"
   "r[0]=vec4(1.,0.,0.,0.);"
   "r[1]=vec4(0.,1.,0.,0.);"
   "r[2]=vec4(0.,0.,1.,0.);"
   "for(int e=0;e<9;e++)"
     "{"
       "vec4 d=vec4(y.x,-y.y,-y.z,-y.w);"
       "r[0]=vec4(dot(d,r[0]),y.x*r[0].yzw+r[0].x*y.yzw);"
       "r[1]=vec4(dot(d,r[1]),y.x*r[1].yzw+r[1].x*y.yzw);"
       "r[2]=vec4(dot(d,r[2]),y.x*r[2].yzw+r[2].x*y.yzw);"
       "f.x=dot(y,d);"
       "f.yzw=2.*y.x*y.yzw;"
       "y=f+t;"
       "if(dot(y,y)>4.)"
         "break;"
     "}"
   "return normalize(vec3(dot(y,r[0]),dot(y,r[1]),dot(y,r[2])));"
 "}"
 "void main()"
 "{"
   "vec2 t=-1.+2.*gl_FragCoord.xy/resolution.xy;"
   "vec3 c=vec3(0.);"
   "vec4 x=vec4(.7*cos(.5*time),.7*sin(.3*time),.7*cos(time),0.);"
   "vec3 r=normalize(vec3(t,1.)),f=vec3(0.,0.,-2.);"
   "float y,d=v(f,r,x,y);"
   "if(d<100.)"
     "{"
       "vec3 e=f+d*r,s=v(e,x);"
       "float m=.5+.5*dot(s,vec3(.57703));"
       "y=max(1.-y*.005,0.);"
       "c=vec3(1.,.9,.5)*m*y+.5*vec3(.6,.7,.8)*y;"
     "}"
   "else"
     " c=vec3(.5,.51,.52)+vec3(.5,.47,.45)*t.y;"
   "gl_FragColor=vec4(c,1.);"
 "}";

const char *radial_blur_frag =
 "uniform vec2 resolution;"
 "uniform float time;"
 "uniform sampler2D tex0,tex1,tex2,tex3;"
 "vec3 v(in vec2 v)"
 "{"
   "vec2 t,x=vec2(sin(1.1*time+v.x),sin(1.2*time+v.y));"
   "float r=atan(x.y,x.x),y=sqrt(dot(x,x));"
   "t.x=sin(time)+v.x*sqrt(y*y+1.);"
   "t.y=sin(.6+1.1*time)+v.y*sqrt(y*y+1.);"
   "return texture2D(tex0,t*.5).xyz;"
 "}"
 "void main()"
 "{"
   "vec2 t=-1.+2.*gl_FragCoord.xy/resolution.xy,r=t;"
   "vec3 f=vec3(0.);"
   "vec2 m=(vec2(0.,0.)-t)/40.;"
   "float s=1.;"
   "for(int e=0;e<40;e++)"
     "{"
       "vec3 y=v(r);"
       "y=smoothstep(.1,1.,y*y);"
       "f+=s*y;"
       "s*=.99;"
       "r+=m;"
     "}"
   "f/=40.;"
   "float x=1.5/(1.+dot(t,t));"
   "gl_FragColor=vec4(f*x,1.);"
 "}";

const char *relief_tunnel_frag =
 "uniform vec2 resolution;"
 "uniform float time;"
 "uniform sampler2D tex0,tex1,tex2,tex3;"
 "void main()"
 "{"
   "vec2 v=-1.+2.*gl_FragCoord.xy/resolution.xy,f;"
   "float t=sqrt(dot(v,v)),y=atan(v.y,v.x)+.5*sin(.5*t-.5*time),r=.5+.5*cos(7.*y);"
   "r=smoothstep(0.,1.,r);"
   "r=smoothstep(0.,1.,r);"
   "r=smoothstep(0.,1.,r);"
   "r=smoothstep(0.,1.,r);"
   "f.x=time+1./(t+.2*r);"
   "f.y=3.*y/3.1416;"
   "float s=(.5+.5*r)*t*t;"
   "vec3 e=texture2D(tex0,f).xyz;"
   "float x=.5+.5*cos(7.*y);"
   "x=smoothstep(0.,.4,x)-smoothstep(.4,.7,x);"
   "x=1.-.5*x*t;"
   "gl_FragColor=vec4(e*s*x,1.);"
 "}";

const char *slisesix_frag =
 "#extension GL_EXT_gpu_shader4:enable\n"
 "uniform vec2 resolution;"
 "uniform float time;"
 "uniform sampler2D tex0;"
 "int v(in int v)"
 "{"
   "return v=v<<13^v,v*(v*v*15731+789221)+1376312589&2147483647;"
 "}"
 "float t(in int t)"
 "{"
   "return float(v(t));"
 "}"
 "float s(in vec3 v)"
 "{"
   "ivec3 s=ivec3(floor(v));"
   "vec3 f=fract(v);"
   "f=f*f*(3.-2.*f);"
   "int e=s.x+s.y*57+s.z*113;"
   "float o=mix(mix(mix(t(e+0),t(e+1),f.x),mix(t(e+57),t(e+58),f.x),f.y),mix(mix(t(e+113),t(e+114),f.x),mix(t(e+170),t(e+171),f.x),f.y),f.z);"
   "return 1.-o*9.31323e-10;"
 "}"
 "float f(in vec3 v)"
 "{"
   "return.5*s(v)+.25*s(v*2.)+.125*s(v*4.)+.0625*s(v*8.);"
 "}"
 "float f(in float v,in float t)"
 "{"
   "t=1.-t;"
   "if(v<.1||v>.9)"
     "return t;"
   "v=v-.5;"
   "return-(sqrt(v*v+t*t)-.4);"
 "}"
 "float s(in vec3 v,in vec3 t)"
 "{"
   "vec3 s=max(abs(v)-t,0.);"
   "return dot(s,s);"
 "}"
 "float f(in float v,in float t,in float f,in float e,in float o)"
 "{"
   "vec3 c=vec3(v,t,f);"
   "float a=s(c,vec3(.14,1.,.14));"
   "if(a>e*e)"
     "return e+1.;"
   "float i=t-.4,l=t-.35,n=t-1.,r=s(c,vec3(.1,1.,.1)),x=s(c,vec3(.12,.4,.12)),m=s(c,vec3(.05,.35,.14)),y=s(c,vec3(.14,.35,.05)),z=s(vec3(v,n,f),vec3(.14,.02,.14)),u=s(vec3((v-i)*.7071,(i+v)*.7071,f),vec3(.07071,.07071,.12)),p=s(vec3(v,(i+f)*.7071,(f-i)*.7071),vec3(.12,.07071,.07071)),d=s(vec3((v-l)*.7071,(l+v)*.7071,f),vec3(.07071,.07071,.14)),h=s(vec3(v,(l+f)*.7071,(f-l)*.7071),vec3(.14,.07071,.07071)),q=min(min(min(r,x),min(m,y)),min(min(u,p),min(d,h)));"
   "q=min(q,z);"
   "return q;"
 "}"
 "float t(vec3 v,in float t)"
 "{"
   "v-=vec3(.64,.5,1.5);"
   "float f=dot(v,v),e=smoothstep(0.,.5,f),o=.75+.25*e,c=.8+.2*e;"
   "v.x*=o;"
   "v.y*=c;"
   "v.z*=o;"
   "f=dot(v,v);"
   "float a=sqrt(f),i=1.-smoothstep(0.,.75,a);"
   "i*=.4;"
   "float l=sin(i),n=cos(i);"
   "v.xy=mat2(n,l,-l,n)*v.xy;"
   "float r=100000.,x=.05+sqrt(dot(v.xz,v.xz)),m=.46625-6.*x*exp2(-10.*x);"
   "for(int y=1;y<7;y++)"
     "{"
       "float z=.897586*float(y),u=z+.4*x*s(vec3(4.*x,2.5,z))+.29,p=cos(u),d=sin(u);"
       "vec3 h=vec3(v.x*p-v.z*d,v.y+m,v.x*d+v.z*p);"
       "float q=dot(h.yz,h.yz);"
       "if(h.x>0.&&h.x<1.5&&q<r)"
         "r=q;"
     "}"
   "float y=sqrt(r)-.045,z=a-.3,u=clamp(a*3.,0.,1.);"
   "return y*u+z*(1.-u);"
 "}"
 "float f(in vec3 s,out int e,out int o)"
 "{"
   "o=0;"
   "float c,a;"
   "c=s.y;"
   "vec2 i=vec2(128.)+6.*vec2(s.x+s.z,s.x-s.z);"
   "ivec2 l=ivec2(floor(i));"
   "o=v(l.x+53*l.y);"
   "vec2 n=fract(i);"
   "float r=smoothstep(.975,1.,max(n.x,n.y));"
   "if((o>>10&7)>6)"
     "r=1.;"
   "c+=.005*r;"
   "a=c;"
   "e=0;"
   "if(r>1e-07)"
     "e=2;"
   "float x=fract(s.x+128.),m=fract(s.z+128.);"
   "if(s.y>1.)"
     "{"
       "c=max(f(x,s.y),f(m,s.y));"
       "if(c<a)"
         "a=c,e=5;"
     "}"
   "x=fract(s.x+128.+.5);"
   "m=fract(s.z+128.+.5);"
   "c=f(x-.5,s.y,m-.5,a,13.1*floor(s.x)+17.7*floor(s.z));"
   "if(c<a*a)"
     "a=sqrt(c),e=1;"
   "c=t(s,a);"
   "if(c<a)"
     "a=c,e=4;"
   "return a;"
 "}"
 "vec3 e(in vec3 v)"
 "{"
   "float t=.0002;"
   "vec3 s;"
   "int e,o;"
   "s.x=f(vec3(v.x+t,v.y,v.z),e,o)-f(vec3(v.x-t,v.y,v.z),e,o);"
   "s.y=f(vec3(v.x,v.y+t,v.z),e,o)-f(vec3(v.x,v.y-t,v.z),e,o);"
   "s.z=f(vec3(v.x,v.y,v.z+t),e,o)-f(vec3(v.x,v.y,v.z-t),e,o);"
   "return normalize(s);"
 "}"
 "void main()"
 "{"
   "vec2 v=-1.+2.*gl_FragCoord.xy/resolution.xy;"
   "float t=time*.15;"
   "vec2 s=vec2(cos(t),sin(t));"
   "float o=v.x*v.x*.32+v.y*v.y,c=(7.-sqrt(37.5-11.5*o))/(o+1.);"
   "v*=c;"
   "float a=resolution.x/resolution.y;"
   "vec3 i=normalize(vec3(a*v.x*s.x-s.y,v.y,s.x+a*v.x*s.y)),l=vec3(.5+1.4*s.y,.5,1.5-1.4*s.x);"
   "float n;"
   "int r=666,x;"
   "vec3 m,y=vec3(0.);"
   "\n#if 1\n"
   "for(n=.5;n<12.;)"
     "{"
       "m=l+n*i;"
       "float z=f(m,r,x);"
       "if(z<.01)"
         "break;"
       "n+=z;"
     "}"
   "\n#else\n"
   "n=.5;"
   "for(int z=0;z<50;z++)"
     "{"
       "m=l+n*i;"
       "float u=f(m,r,sumMatID);"
       "if(u<.001)"
         "break;"
       "n+=u;"
     "}"
   "\n#endif\n"
   "if(r!=666)"
     "{"
       "vec3 z=e(m);"
       "float u=.0001,p=.0075;"
       "if(r!=5)"
         "p*=.75;"
       "if(r==4)"
         "p*=.5;"
       "p/=u;"
       "float d=f(32.*m);"
       "z.x+=p*(f(32.*vec3(m.x+u,m.y,m.z))-d);"
       "z.y+=p*(f(32.*vec3(m.x,m.y+u,m.z))-d);"
       "z.z+=p*(f(32.*vec3(m.x,m.y,m.z+u))-d);"
       "z=normalize(z);"
       "float h=0.;"
       "vec3 q=vec3(.5-m.x,.8-m.y,1.5-m.z);"
       "float b=dot(q,q),g=inversesqrt(b);"
       "q=q*g;"
       "float k=dot(z,q);"
       "if(r==4)"
         "k=.5+.5*k;"
       "else"
         " k=.1+.9*k;"
       "k=clamp(k,0.,1.);"
       "k*=2.5*exp2(-1.75*b);"
       "float C=(z[0]+z[1])*.075;"
       "if(r==0)"
         "{"
           "float D=13.1*float(x&255),F=f(16.*vec3(m.x+D,m.y,m.z));"
           "y=vec3(.7)+F*vec3(.2,.22,.25);"
           "float w=float(x>>9&15)/14.;"
           "w=.51+.34*w;"
           "y*=w;"
           "float E=1.;"
           "if((x&256)!=0)"
             "E=-1.;"
           "float G=sin(64.*m.z*E+64.*m.x+4.*F);"
           "G=smoothstep(.25,.5,G)-smoothstep(.5,.75,G);"
           "y+=G*vec3(.15);"
         "}"
       "else"
         " if(r==2)"
           "y=vec3(0.);"
         "else"
           " if(r==1)"
             "{"
               "float D=f(16.*m),F=sin(64.*m.z+64.*m.x+4.*D);"
               "F=smoothstep(.3,.5,F)-smoothstep(.5,.7,F);"
               "y=vec3(.59)+D*vec3(.17,.18,.21)+F*vec3(.15)+vec3(C);"
             "}"
           "else"
             " if(r==4)"
               "{"
                 "float D=f(16.*m);"
                 "y=vec3(.82,.73,.65)+D*vec3(.1);"
                 "float F=.9+.1*f(32.*m);"
                 "y*=F;"
                 "float w=max(-dot(z,i),0.);"
                 "y-=vec3(w*w*.45);"
                 "h=clamp((z.y-z.z)*.707,0.,1.);"
                 "h=.2*pow(h,32.);"
               "}"
             "else"
               "{"
                 "float D=f(16.*m);"
                 "y=vec3(.64,.61,.59)+D*vec3(.21,.19,.19)+C;"
               "}"
       "float D,F=0.,w=10.;"
       "for(int E=0;E<5;E++)"
         "{"
           "float G=.01+.015*float(E*E);"
           "vec3 I=z*G+m;"
           "int L,M;"
           "float T=f(I,L,M);"
           "D=-(T-G);"
           "F+=D*w;"
           "w*=.5;"
         "}"
       "D=1.-clamp(F,0.,1.);"
       "float E=0.;"
       "for(int G=0;G<6;G++)"
         "{"
           "float I=float(G)/6.,L=.01+I;"
           "vec3 M=q*L+m;"
           "int T,X;"
           "float j=f(M,T,X);"
           "E+=(1.-I)*j*2.*(10./6.);"
         "}"
       "k*=clamp((E-.4)*1.5,0.,1.);"
       "y=vec3(h)+y*(D*vec3(.25,.3,.35)+k*vec3(1.95,1.65,1.05));"
       "y=y*exp2(-.4*n);"
     "}"
   "y=(sqrt(y)*.7+.3*y)*vec3(.83,1.,.83)*1.2;"
   "y*=.25+.75*clamp(.6*abs(v.x-1.)*abs(v.x+1.),0.,1.);"
   "gl_FragColor=vec4(y,1.);"
 "}";

const char *square_tunnel_frag =
 "uniform vec2 resolution;"
 "uniform float time;"
 "uniform sampler2D tex0,tex1,tex2,tex3;"
 "void main()"
 "{"
   "vec2 o=-1.+2.*gl_FragCoord.xy/resolution.xy,e;"
   "float t=pow(pow(o.x*o.x,16.)+pow(o.y*o.y,16.),1./32.);"
   "e.x=.5*time+.5/t;"
   "e.y=atan(o.y,o.x)/3.1416;"
   "vec3 x=texture2D(tex0,e).xyz;"
   "gl_FragColor=vec4(x*t*t*t,1.);"
 "}";

const char *star_frag =
 "uniform float time;"
 "uniform vec2 resolution;"
 "uniform vec4 mouse;"
 "uniform sampler2D tex0,tex1,tex2,tex3;"
 "void main()"
 "{"
   "vec2 e,o=-1.+2.*gl_FragCoord.xy/resolution.xy;"
   "float t=atan(o.y,o.x),i=sqrt(dot(o,o)),m=i*(1.+.8*cos(time));"
   "e.x=.02*o.y+.03*cos(-time+t*3.)/m;"
   "e.y=.1*time+.02*o.x+.03*sin(-time+t*3.)/m;"
   "float r=.9+pow(max(1.5-i,0.),4.);"
   "r*=.6+.4*cos(time+3.*t);"
   "vec3 x=texture2D(tex0,e).xyz;"
   "gl_FragColor=vec4(x*r,1.);"
 "}";

const char *sult_frag =
 "float e=5.,c=.9,o=0.,i=90.,l=0.;"
 "vec3 n=vec3(1,1,1),v=vec3(0,0,1),y=vec3(0,0,1.5);"
 "uniform vec2 resolution;"
 "uniform float time;"
 "vec3 t(vec3 e,float c)"
 "{"
   "return vec3(e.x*cos(c)+e.z*sin(c),e.y,e.z*cos(c)-e.x*sin(c));"
 "}"
 "vec3 a(vec3 e,float c)"
 "{"
   "return vec3(e.y*cos(c)+e.z*sin(c),e.x,e.z*cos(c)-e.y*sin(c));"
 "}"
 "float x=0.,r=10.;"
 "float a(vec3 c)"
 "{"
   "float o=time,i,l=0.,n,v,y;"
   "vec3 t;"
   "c+=(sin(c.zxy*1.7+o)+sin(c.yzx+o*3.))*.2;"
   "if(e<6.)"
     "l=length(c.xyz*vec3(1,1,.1)-vec3(0,-.1,o*.15-.3))-.34;"
   "else"
     " l=length(c.xy+vec2(0.,.7))-.3+(sin(c.z*17.+o*.6)+sin(c.z*2.)*6.)*.01;"
   "c.xy=vec2(atan(c.x,c.y)*1.113,1.6-length(c.xy)-sin(o*2.)*.3);"
   "t=fract(c.xzz+.5).xyz-.5;"
   "t.y=(c.y-.35)*1.3;"
   "i=max(abs(c.y-.3)-.05,abs(length(fract(c.xz)-.5)-.4)-.03);"
   "x=step(l,i);"
   "return min(min(i,l),c.y-.2);"
 "}"
 "vec3 s=vec3(.19,.2,.24),m=vec3(1),z=vec3(.45,.01,0),f=vec3(.17,0,0);"
 "void main()"
 "{"
   "vec2 g=-1.+2.*gl_FragCoord.xy/resolution.xy;"
   "vec3 u=normalize(t(t(vec3(g.y*c,g.x*c*1.33,1),-o*.035).yxz,(i+l*time)*.035)),p=v+y*time;"
   "float h=1.,d=0.,w,C,F=0.,b,j,k,q;"
   "vec3 A=vec3(.01,0,0),B=A.yyy,D;"
   "while(h>.1)"
     "{"
       "for(w=F,C=1.;w<r&&C>.005;w+=C)"
         "C=a(p+u*w);"
       "if(w<r)"
         "p+=u*w,b=a(p),k=x,D=normalize(-vec3(b-a(p+A.xyy),b-a(p+A.yxy),b-a(p+A.yyx))),j=clamp(a(p+D*.05)*4.+a(p+D*.1)*2.+.5,.1,1.),d=k*.3,D=normalize(D+step(4.,e)*x*sin(p.yzx*40.)*.05),u=reflect(u,D),q=clamp(dot(normalize(n),D),0.,1.),D=mix(mix(s,m,q),z*(q+.2),k)+vec3(.7*pow(clamp(dot(normalize(n),u),0.,1.),12.)),B+=h*mix(D*j,f,w/r),h*=d*(1.-w/r),F=.1;"
       "else"
         " B+=h*f,h=0.;"
     "}"
   "gl_FragColor.xyz=B;"
   "gl_FragColor.w=1.;"
 "}";

const char *to_the_road_of_ribbon_frag =
 "uniform vec2 resolution;"
 "uniform float time;"
 "float e(vec3 e)"
 "{"
   "return cos(e.x)+cos(e.y*1.5)+cos(e.z)+cos(e.y*20.)*.05;"
 "}"
 "float c(vec3 e)"
 "{"
   "return length(max(abs(e-vec3(cos(e.z*1.5)*.3,-.5+cos(e.z)*.2,0.))-vec3(.125,.02,time+3.),vec3(0.)));"
 "}"
 "float o(vec3 o)"
 "{"
   "return min(e(o),c(o));"
 "}"
 "vec3 i(vec3 e)"
 "{"
   "vec3 c=vec3(.01,0,0);"
   "return normalize(vec3(o(e+c.xyy),o(e+c.yxy),o(e+c.yyx)));"
 "}"
 "void main()"
 "{"
   "vec2 t=-1.+2.*gl_FragCoord.xy/resolution.xy;"
   "t.x*=resolution.x/resolution.y;"
   "vec4 v=vec4(1.);"
   "vec3 n=vec3(sin(time)*.5,cos(time*.5)*.25+.25,time),m=normalize(vec3(t.x*1.6,t.y,1.)),r=n,l;"
   "float s=0.;"
   "for(int a=0;a<64;a++)"
     "s=o(r),r+=s*m;"
   "l=r;"
   "float a=length(r-n)*.02;"
   "m=reflect(m,i(r));"
   "r+=m;"
   "for(int y=0;y<64;y++)"
     "s=o(r),r+=s*m;"
   "v=max(dot(i(r),vec3(.1,.1,0.)),0.)+vec4(.3,cos(time*.5)*.5+.5,sin(time*.5)*.5+.5,1.)*min(length(r-n)*.04,1.);"
   "if(e(l)>c(l))"
     "v=mix(v,vec4(cos(time*.3)*.5+.5,cos(time*.2)*.5+.5,sin(time*.3)*.5+.5,1.),.3);"
   "vec4 y=(v+vec4(a)+(1.-min(l.y+1.9,1.))*vec4(1.,.8,.7,1.))*min(time*.5,1.);"
   "gl_FragColor=vec4(y.xyz,1.);"
 "}";

const char *tunnel_frag =
 "uniform vec2 resolution;"
 "uniform float time;"
 "uniform sampler2D tex0,tex1,tex2,tex3;"
 "void main()"
 "{"
   "vec2 e=-1.+2.*gl_FragCoord.xy/resolution.xy,t;"
   "float o=atan(e.y,e.x),r=sqrt(dot(e,e));"
   "t.x=.75*time+.1/r;"
   "t.y=o/3.1416;"
   "vec3 x=texture2D(tex0,t).xyz;"
   "gl_FragColor=vec4(x*r,1.);"
 "}";

const char *twist_frag =
 "uniform vec2 resolution;"
 "uniform float time;"
 "uniform sampler2D tex0,tex1,tex2,tex3;"
 "void main()"
 "{"
   "vec2 e=-1.+2.*gl_FragCoord.xy/resolution.xy,t;"
   "float o=atan(e.y,e.x),r=sqrt(dot(e,e));"
   "t.x=r-.25*time;"
   "t.y=cos(o*5.+2.*sin(time+7.*r));"
   "vec3 i=(.5+.5*t.y)*texture2D(tex0,t).xyz;"
   "gl_FragColor=vec4(i,1.);"
 "}";

const char *z_invert_frag =
 "uniform vec2 resolution;"
 "uniform float time;"
 "uniform sampler2D tex0,tex1,tex2,tex3;"
 "void main()"
 "{"
   "vec2 o=-1.+2.*gl_FragCoord.xy/resolution.xy,e;"
   "float t=atan(o.y,o.x),i=sqrt(dot(o,o));"
   "e.x=cos(.6+time)+cos(cos(1.2+time)+t)/i;"
   "e.y=cos(.3+time)+sin(cos(2.+time)+t)/i;"
   "vec3 r=texture2D(tex0,e*.25).xyz;"
   "gl_FragColor=vec4(r*i*i,1.);"
 "}";

const char *1_simple_frag =
 "void main()"
 "{"
   "gl_FragColor=vec4(.2,.4,.6,0.);"
 "}";

const char *2_simple_frag =
 "void main()"
 "{"
   "gl_FragColor=vec4(.2,.4,.6,0.);"
 "}";

const char *2_simple_opt_frag =
 "void main()"
 "{"
   "gl_FragColor=vec4(.2,.4,.6,0.);"
 "}";

const char *array_frag =
 "#version 120\n"
 "float o[5]=float[5](3.4,4.2,5.,5.2,1.1);"
 "const int t=5;"
 "float a[t]=float[t](3.4,4.2,5.,5.2,1.1),f[]=float[](3.4,4.2,5.,5.2,1.1),l[5]=float[](3.4,4.2,5.,5.2,1.1),n[]=float[5](3.4,4.2,5.,5.2,1.1);";

const char *blocks_frag =
 "float t()"
 "{"
   "int t=2;"
   "float f;"
   "if(t==2)"
     "t++;"
   "if(t<5)"
     "if(t==3)"
       "f=.2;"
     "else"
       " f=.3;"
   "else"
     " f=.4;"
   "return f;"
 "}"
 "int f=5;"
 "float i()"
 "{"
   "int t=2,i=0;"
   "for(int o=0;o<4;o++)"
     "t+=o;"
   "for(t++;i<4;i++)"
     "{"
       "int o=i-1;"
       "t+=o;"
     "}"
   "return 1./float(f);"
 "}"
 "void main()"
 "{"
   "float f=t(),o=i();"
   "gl_FragColor=vec4(.2,f,o,0.);"
 "}";

const char *commas_frag =
 "void o()"
 "{}"
 "void i()"
 "{}"
 "void d()"
 "{"
   "bool d=true;"
   "if(d)"
     "o(),i();"
 "}";

const char *empty_block_frag =
 "void i()"
 "{"
   "int i=5,r=7;"
   "if(1)"
     "return 2;"
   "if(i)"
     ";"
   "if(r)"
     ";"
   "more_semicolons;"
   "return 3;"
 "}";

const char *float_frag =
 "void main()"
 "{"
   "float e=1.5,o=3e-07,a=.42,l=0.,g=0.,i=-.002,r=2e-09,v=2e+06,c=2e+10,d=1./(e+o+a+l+g),f=1./(i*v*r*c);"
   "gl_FragColor=vec4(d,f,d,0.);"
 "}";

const char *hexa_frag =
 "void main()"
 "{"
   "float o=float(255)/1000.,a=float(-255)/1000.,l=o-a+float(0);"
   "gl_FragColor=vec4(.2,.4,o,0.);"
 "}";

const char *inline_frag =
 "void main()"
 "{"
   "float a=.5,i=a*(.6*a);"
 "}";

const char *keyword_prefix_frag =
 "void d()"
 "{}"
 "void i()"
 "{"
   "d();"
 "}";

const char *numbers_frag =
 "void main()"
 "{"
   "float o=float(34)/1000.,a=float(-57)/1000.;"
   "int l=65535,t=-65536;"
   "float f=o-a+float(0)+float(l+t)/20.;"
   "gl_FragColor=vec4(f,f,f,0.);"
 "}";

const char *overload_frag =
 "float t()"
 "{"
   "return.1;"
 "}"
 "float r()"
 "{"
   "return.2;"
 "}"
 "float r(int t)"
 "{"
   "return.3;"
 "}"
 "float t(float t)"
 "{"
   "return.4;"
 "}"
 "float n(bool t)"
 "{"
   "return.5;"
 "}"
 "float n(int t,int r)"
 "{"
   "return.6;"
 "}"
 "float n(int t,int r,int n,int o)"
 "{"
   "return.7;"
 "}"
 "void main()"
 "{"
   "float o=r()+2.*r(0),l=2.*t(1)-t(),a=n(true)+n(0,1)-n(0,1,2,3);"
   "gl_FragColor=vec4(o,l,a,0.);"
 "}";

const char *precedence_frag =
 "void main()"
 "{"
   "float a=1.5-5./6.,l=(true?false?1.:2.:12.)*5.,e=4.*(false?true?1.:2.:3.),o=float(171),f=(2.+a)*(4.+l*6.)-(7.-e),r=-------5.,t=1./(a+l+e),g=1./(o*f*r);"
   "gl_FragColor=vec4(t,g,t,0.);"
 "}";

const char *rename_conflict_frag =
 "int n(int n,int t)"
 "{"
   "return n+1;"
 "}"
 "int n()"
 "{"
   "n(0);"
 "}"
 "int n(int t,int i,int r)"
 "{"
   "return t+n();"
 "}";

const char *simple_frag =
 "void main()"
 "{"
   "gl_FragColor=vec4(.2,.4,.6,0.);"
 "}";

const char *smoothstep_frag =
 "void main()"
 "{"
   "vec2 o=-1.+2.*gl_FragCoord.xy/resolution.xy;"
   "float t=sqrt(dot(o,o));"
   "t=smoothstep(0.,1.,t);"
   "ao=smoothstep(0.,.4,t)-smoothstep(.4,.7,t);"
   "float s=smoothstep(-.1,.1,ref.y);"
 "}";

const char *suffix_frag =
 "void main()"
 "{"
   "int f=41u,i=42U;"
   "float a=1.2LF,l=3.F,n=.0003lf,o=2e-09f,t=2.f;"
 "}";

const char *ball_pixel_glsl =
 "const int o=8;"
 "uniform vec4 col[o];"
 "uniform vec3 pos[o];"
 "uniform float intensity[o],localTime,progression;"
 "vec3 e(vec2 e)"
 "{"
   "float i=progression,n=i*i,c=localTime;"
   "vec3 t=vec3(0.,0.,0.);"
   "float l=min(0.,1.5*progression-.5),r=6.+3.*sin(c);"
   "for(int a=0;a<o;++a)"
     "{"
       "vec2 s=pos[a].xy-e;"
       "float v=dot(s,s),f=atan(s.y,s.x),m=cos(5.*(f-(1.+float(a)*.05-i*1.5)*c)+v*r);"
       "m*=min(1.,abs(.7+i*.3-m)*15.);"
       "float x=max(0.,m*(1.-n)),g=x*intensity[a]*exp(-.02*v)+l;"
       "t+=col[a].xyz*g;"
     "}"
   "return t;"
 "}"
 "void main()"
 "{"
   "vec2 o=gl_TexCoord[0].xy*.7;"
   "vec3 i=e(o);"
   "gl_FragColor=vec4(i*1.1,1.);"
 "}";

const char *ball_vertex_glsl =
 "void main()"
 "{"
   "gl_TexCoord[0]=gl_MultiTexCoord0,gl_Position=ftransform();"
 "}";

const char *bloom2_pixel_glsl =
 "uniform sampler2D tex;"
 "uniform float invTexWidth;"
 "void main()"
 "{"
   "vec2 e=gl_TexCoord[0].xy,x=vec2(invTexWidth,0.);"
   "vec3 t=texture2D(tex,e-2.14286*x).xyz,r=texture2D(tex,e-.6*x).xyz,i=texture2D(tex,e+.6*x).xyz,o=texture2D(tex,e+2.14286*x).xyz,v=.4375*(t+o)+1.5625*(r+i);"
   "gl_FragColor=vec4(v,1.);"
 "}";

const char *bloom2_vertex_glsl =
 "void main()"
 "{"
   "gl_TexCoord[0]=gl_MultiTexCoord0,gl_Position=ftransform();"
 "}";

const char *bloom_pixel_glsl =
 "uniform sampler2D tex;"
 "uniform float invTexHeight;"
 "void main()"
 "{"
   "vec2 e=gl_TexCoord[0].xy,x=vec2(0.,invTexHeight);"
   "const vec3 t=vec3(.5,.5,.5),r=vec3(0.,0.,0.);"
   "vec3 v=max(r,texture2D(tex,e-2.14286*x).xyz-t),o=max(r,texture2D(tex,e-.6*x).xyz-t),a=max(r,texture2D(tex,e+.6*x).xyz-t),c=max(r,texture2D(tex,e+2.14286*x).xyz-t),i=.4375*(v+c)+1.5625*(o+a);"
   "gl_FragColor=vec4(i,1.);"
 "}";

const char *bloom_vertex_glsl =
 "void main()"
 "{"
   "gl_TexCoord[0]=gl_MultiTexCoord0,gl_Position=ftransform();"
 "}";

const char *dfc_pixel_glsl =
 "const float o=3.14159;"
 "uniform float localTime;"
 "vec3 c(float c,float l)"
 "{"
   "float e=(c+1.)*350.,a=(l+1.)*350.,t=(e-350.)/20.,s=(a-350.)/20.,f=t,v=s+localTime,i=cos(t/5.),r=cos(s/5.),n=cos(i),m=sin(i),g=cos(r),x=sin(r);"
   "vec3 T=vec3(0.,0.,0.);"
   "for(int d=0;d<=30;d++)"
     "{"
       "float u=(float(d)-15.)*2.,y=u,C=cos(u/20.),q=v*n+y*m;"
       "y=y*n-v*m;"
       "v=q;"
       "float F=f*g+y*x;"
       "y=y*g-f*x;"
       "f=F;"
       "vec3 b=vec3(128.)+vec3(128.)*vec3(cos(y),cos(y+o*2./3.),cos(y-o*2./3.));"
       "float h=sqrt(f*f+v*v+y*y)-30.,j=.25/(1.+400.*h*h);"
       "T=T*(1.-j)+b*j;"
     "}"
   "return T;"
 "}"
 "void main()"
 "{"
   "vec2 o=.5*gl_TexCoord[0].xy+vec2(.1,.1);"
   "gl_FragColor=vec4(.15*c(o.x,o.y),1.);"
 "}";

const char *dfc_vertex_glsl =
 "void main()"
 "{"
   "gl_TexCoord[0]=gl_MultiTexCoord0,gl_Position=ftransform();"
 "}";

const char *final_pixel_glsl =
 "uniform sampler2D tonemappedTexture,bloomTexture,paperTexture;"
 "uniform int paper;"
 "uniform float paperInvSize;"
 "void main()"
 "{"
   "vec2 e=gl_TexCoord[0].xy;"
   "vec4 r=texture2D(tonemappedTexture,e),o=texture2D(bloomTexture,e),t=float(t)*1.8*texture2D(paperTexture,gl_FragCoord.xy*paperInvSize)+vec4(1.,1.,1.,1.)*(1.-float(t));"
   "gl_FragColor=t*(r*.8+.2*o);"
 "}";

const char *final_vertex_glsl =
 "void main()"
 "{"
   "gl_TexCoord[0]=gl_MultiTexCoord0,gl_Position=ftransform();"
 "}";

const char *font_pixel_glsl =
 "uniform sampler2D tex,fill;"
 "void main()"
 "{"
   "vec2 e=gl_TexCoord[0].xy;"
   "vec4 l=texture2D(tex,e),o=texture2D(o,e*3.);"
   "gl_FragColor=l*o*gl_Color;"
 "}";

const char *font_vertex_glsl =
 "void main()"
 "{"
   "gl_TexCoord[0]=gl_MultiTexCoord0,gl_Position=ftransform(),gl_FrontColor=gl_Color;"
 "}";

const char *logofinal_pixel_glsl =
 "uniform sampler2D tex;"
 "void main()"
 "{"
   "vec2 e=gl_TexCoord[0].xy;"
   "vec4 o=texture2D(tex,e);"
   "gl_FragColor=gl_Color*o;"
 "}";

const char *logofinal_vertex_glsl =
 "void main()"
 "{"
   "gl_TexCoord[0]=gl_MultiTexCoord0,gl_Position=ftransform(),gl_FrontColor=gl_Color;"
 "}";

const char *orange_pixel_glsl =
 "uniform sampler2D tex,grain;"
 "const int o=5;"
 "uniform float env;"
 "uniform vec3 pos[o];"
 "uniform float intensity[o],localTime,zoom;"
 "const float e=3.14159;"
 "void main()"
 "{"
   "float o=gl_TexCoord[0].x*zoom,t=gl_TexCoord[0].y*zoom,n=localTime*.25;"
   "vec4 l=vec4(0.);"
   "for(int i=0;i<5;i++)"
     "{"
       "vec3 a=vec3(o,t,0.)-pos[i];"
       "float c=atan(a.y,a.x),r=env,v=(r+localTime)*.03,m=n+c/e+float(i)*.1,f=length(a);"
       "vec4 x=texture2D(x,vec2(.5,.3*f));"
       "l+=texture2D(tex,vec2(m,v))*x*(intensity[i]/(1.+.2*f));"
     "}"
   "gl_FragColor=vec4(l.xyz*.6+.4*env,1.);"
 "}";

const char *orange_vertex_glsl =
 "void main()"
 "{"
   "gl_TexCoord[0]=gl_MultiTexCoord0,gl_Position=ftransform();"
 "}";

const char *particle_pixel_glsl =
 "uniform sampler2D tex;"
 "uniform float intensity,alpha;"
 "void main()"
 "{"
   "vec4 a=texture2D(tex,gl_TexCoord[0].xy);"
   "float t=dot(a.xyz,vec3(.33,.33,.33))*a.w*alpha;"
   "if(t<.05)"
     "discard;"
   "gl_FragData[0]=vec4(a.xyz*intensity,t);"
 "}";

const char *particle_vertex_glsl =
 "void main()"
 "{"
   "gl_TexCoord[0]=gl_MultiTexCoord0,gl_Position=ftransform(),gl_FrontColor=gl_Color;"
 "}";

const char *put_pixel_glsl =
 "void main()"
 "{"
   "gl_FragColor=gl_Color;"
 "}";

const char *puttexture_pixel_glsl =
 "uniform sampler2D tex0,tex1,tex2,tex3;"
 "uniform float amountTex0,amountTex1,amountTex2,amountTex3;"
 "void main()"
 "{"
   "vec2 e=gl_TexCoord[0].xy;"
   "vec4 t=texture2D(tex0,e),x=texture2D(tex1,e),o=texture2D(tex2,e),u=texture2D(tex3,e);"
   "gl_FragColor=gl_Color*(amountTex0*t+x*amountTex1+amountTex2*o+u*amountTex3);"
 "}";

const char *puttexture_vertex_glsl =
 "void main()"
 "{"
   "gl_TexCoord[0]=gl_MultiTexCoord0,gl_Position=ftransform(),gl_FrontColor=gl_Color;"
 "}";

const char *put_vertex_glsl =
 "void main()"
 "{"
   "gl_TexCoord[0]=gl_MultiTexCoord0,gl_Position=ftransform(),gl_FrontColor=gl_Color;"
 "}";

const char *scene10_vertex_glsl =
 "void main()"
 "{"
   "gl_TexCoord[0]=gl_MultiTexCoord0,gl_Position=ftransform();"
 "}";

const char *tonemapping_pixel_glsl =
 "uniform sampler2D tex;"
 "void main()"
 "{"
   "vec3 e=texture2D(tex,gl_TexCoord[0].xy).xyz;"
   "float o=dot(vec3(.3,.59,.11),e),r=o/(1.+o);"
   "gl_FragColor=vec4(r*e,1.);"
 "}";

const char *tonemapping_vertex_glsl =
 "void main()"
 "{"
   "gl_TexCoord[0]=gl_MultiTexCoord0,gl_Position=ftransform();"
 "}";

const char *tunnel_pixel_glsl =
 "varying vec2 st;"
 "uniform float alpha;"
 "uniform sampler2D tex;"
 "uniform float time;"
 "uniform vec4 color;"
 "varying float prof;"
 "void main()"
 "{"
   "vec3 a=texture2D(tex,st).xyz;"
   "float o=alpha<.9?1.:1.-.7*dot(vec3(.33,.33,.33),a);"
   "o*=exp(-.1*abs(prof));"
   "gl_FragData[0]=color*vec4(a*1.6,o);"
 "}";

const char *tunnel_vertex_glsl =
 "varying vec2 st;"
 "varying float prof;"
 "void main()"
 "{"
   "st=gl_MultiTexCoord0.xy;"
   "vec4 o=ftransform();"
   "prof=gl_Color.x*50.;"
   "gl_Position=o;"
 "}";

#endif // SHADER_CODE_H_
